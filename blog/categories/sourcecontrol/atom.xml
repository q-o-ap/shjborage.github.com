<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SourceControl | Saick Blog - 专注技术，乐在其中]]></title>
  <link href="http://saick.net/blog/categories/sourcecontrol/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-11-07T22:25:29+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git fetch和git pull的区别]]></title>
    <link href="http://saick.net/blog/2013/10/19/git-fetchhe-git-pullde-qu-bie/"/>
    <updated>2013-10-19T01:47:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/19/git-fetchhe-git-pullde-qu-bie</id>
    <content type="html"><![CDATA[<p>原文： <a href="http://www.tech126.com/git-fetch-pull/">http://www.tech126.com/git-fetch-pull/</a></p>

<h3>Git中从远程的分支获取最新的版本到本地有这样2个命令：</h3>

<h4>1. git fetch：相当于是从远程获取最新版本到本地，不会自动merge</h4>

<p><code>
git fetch origin master
git log -p master..origin/master
git merge origin/master
</code></p>

<!-- more -->


<p>以上命令的含义：<br/>
首先从远程的origin的master主分支下载最新的版本到origin/master分支上,然后比较本地的master分支和origin/master分支的差别,最后进行合并.</p>

<p>上述过程其实可以用以下更清晰的方式来进行：</p>

<p><code>
git fetch origin master:tmp
git diff tmp
git merge tmp
</code></p>

<p>从远程获取最新的版本到本地的test分支上,之后再进行比较合并</p>

<h4>2. git pull：相当于是从远程获取最新版本并merge到本地</h4>

<p><code>
git pull origin master
</code></p>

<p>上述命令其实相当于git fetch 和 git merge</p>

<p>在实际使用中，git fetch更安全一些</p>

<p>因为在merge前，我们可以查看更新情况，然后再决定是否合并</p>

<p>EOF</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git no branch 解决方案]]></title>
    <link href="http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an/"/>
    <updated>2013-06-07T18:03:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>Git在使用过程中，不断的Checkout，以及各种工具使用执行各种平时不太接触的命令，最后发现push不了。 仔细检查才发现原来木有在任何branch上面开发</p>

<h5>事件经过：</h5>

<ol>
<li>正常开发，branch:master</li>
<li>在Eclipse中，使用插件checkout某版本出来</li>
<li>再checkout到最近一次提交的版本</li>
<li>不断Commit多次，一直不能push，以为工具出了问题</li>
<li>实在忍受不了就找问题，最后git branch发现 *(no branch).</li>
</ol>


<p>每次都提交，数据肯定不会丢，也没有担心。
就找个问题的解决方案，果然有。</p>

<!-- more -->


<p><a href="http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes">http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes</a>
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>if you have already checked out to master,&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>you won&rsquo;t know the commit-ish of your &ldquo;no branch&rdquo;:&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>git fsck &mdash;lost-found # (to find your &lt;commit-ish>)
</span><span class='line'>git merge &lt;commit-ish>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>if you are still on your &ldquo;no branch&rdquo; commit:&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>git log # (the commit-ish will be on the first line)
</span><span class='line'>git checkout master
</span><span class='line'>git merge &lt;commit-ish>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>or&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>git log | head -n 1 | cut -d &lsquo; &rsquo; -f 2 | pbcopy
</span><span class='line'>git checkout master
</span><span class='line'>git merge &lt;commit-ish>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git基本使用与Dropbox配合使用]]></title>
    <link href="http://saick.net/blog/2013/05/29/gitji-ben-shi-yong-yu-dropboxpei-he-shi-yong/"/>
    <updated>2013-05-29T11:43:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/29/gitji-ben-shi-yong-yu-dropboxpei-he-shi-yong</id>
    <content type="html"><![CDATA[<h3>Git基本使用</h3>

<h4>1.取得项目的Git仓库</h4>

<h5>1.1从当前目录初始化</h5>

<p><code>
$ git init
</code></p>

<p>然后可以进行git add .. 进行文件添加。<br/>
以及编写.gitignore文件，对本地文件进行忽略</p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>OBJ-C示例 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p> # Exclude the build directory
</span><span class='line'> build/*&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p> # Exclude temp nibs and swap files
</span><span class='line'> &lt;em>~.nib
</span><span class='line'> &lt;/em>.swp
</span><span class='line'> 18
</span><span class='line'> # Exclude OS X folder attributes
</span><span class='line'> .DS_Store&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p> # Exclude user-specific XCode 3 and 4 files
</span><span class='line'> &lt;em>.mode1
</span><span class='line'> &lt;/em>.mode1v3
</span><span class='line'> &lt;em>.mode2v3
</span><span class='line'> &lt;/em>.perspective
</span><span class='line'> &lt;em>.perspectivev3
</span><span class='line'> &lt;/em>.pbxuser
</span><span class='line'> &lt;em>.xcworkspace
</span><span class='line'> &lt;/em>.xcuserstate
</span><span class='line'> xcuserdata&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h5>1.2 从现有仓库克隆</h5>

<p><code>
git clone git://github.com/aaaa/aa.git
git clone file:::/Volumes/Data/xxx.git
git clone /Volumes/Data/xxx.git
git clone /Volumes/Data/xxx.git new_xxx_dir
</code></p>

<p>默认会创建xxx目录（xxx.git）,如果想指定目录的话用最后一种</p>

<h5>1.3 其它常用</h5>

<p><code>
git commit
git commit -a -m "asdf"
git status
git log
git log -1
git log -p
</code></p>

<p>注意看提示就好了。</p>

<h4>2.远程仓库使用</h4>

<h5>2.1 创建</h5>

<p><code>
git init --bare
</code></p>

<p>创建一个空的远程仓库（可在服务器上，也可在本地，也可以在Dropbox的目录中）</p>

<h5>2.2 查看远程仓库</h5>

<p>在本地执行以下命令
<code>
git remote -v
</code></p>

<h5>2.3 添加远程仓库</h5>

<p><code>
git remote add [shortanem] [url]
</code></p>

<h5>2.4 从远程抓取数据</h5>

<p><code>
git fetch [remote-name]
</code></p>

<h5>2.5 推送数据</h5>

<p><code>
git push [remote-name] [branchname]
</code></p>

<h5>2.6 其它</h5>

<p><code>
git remote show [remote-name]
git remote rename old new
git remote rm xxx
</code></p>

<h4>Dropbox 整合</h4>

<p>把远程建在Dropbox上即可，哈哈</p>
]]></content>
  </entry>
  
</feed>
