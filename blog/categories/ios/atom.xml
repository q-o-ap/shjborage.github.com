<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Saick Blog]]></title>
  <link href="http://saick.net/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-10-11T00:06:40+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 5 : UIImage and resizableImageWithCapInsets]]></title>
    <link href="http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets/"/>
    <updated>2013-10-10T23:41:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets</id>
    <content type="html"><![CDATA[<p>I recently began writing a short example to learn more about the iOS 5 Appearance API and customizing UINavigationBar objects. The goal was to add a custom background, title and text to the navbar. Once I had this working, to keep a consist look across my application, I began tweaking the buttons on the navbar using the same Appearance API.
As I got further into the customization of the buttons, I ran into a method withinUIImage that was introduced in iOS 5, resizableImageWithCapInsets. I found myself getting side-tracked from the original idea of navbar look and feel, to understanding how cap insets work. This post delves into what I learned.</p>

<p>Cap Insets with UIButton
As the documentation describes, you use resizableImageWithCapInsets to add cap insets to an image, when the image is resized or scaled, cap areas are not affected. The best way to understand this is through an example.
Let’s assume I want all the buttons on my UI to have a similar look, a gradient with a white border. Below is the image used for the examples in this post (the button is shown on a gray backdrop so you can see the white border):</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-10-10-1.png">http://www.saick.net/images/blog/2013-10-10-1.png</a>"></p>

<p>Depending on the context of where the button appears, its size may vary. The code to create a button with the image and the corresponding output follow:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(80, 130, 160, 44)];&lt;br/>
</span><span class='line'>[button setTitle:@&ldquo;Test Button&rdquo; forState:UIControlStateNormal];&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>// Image with without cap insets
</span><span class='line'>UIImage *buttonImage = [UIImage imageNamed:@&ldquo;blueButton&rdquo;];&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[button addTarget:self action:@selector(buttonPressed:) forControlEvents: UIControlEventTouchUpInside];
</span><span class='line'>[button setBackgroundImage:buttonImage forState:UIControlStateNormal];
</span><span class='line'>[[self view] addSubview:button];</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-10-10-2.png">http://www.saick.net/images/blog/2013-10-10-2.png</a>"></p>

<p>As you can see, the button is stretched in all directions. Let’s change the code to include cap insets, however, before we do that, let’s look at the signature of the cap insets method:</p>

<p><code>
- (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets
</code></p>

<p>Looking on step further, UIEdgeInserts is defined as:
```
typedef struct {</p>

<pre><code> CGFloat top, left, bottom, right;
</code></pre>

<p>} UIEdgeInsets;
```</p>

<p>UIEdgeInsets is structure that specifies float values for each cap inset: top, left, bottom and right areas of an image. To apply this to the image for the button, here is all we need to do:
<code>
// Image with cap insets
UIImage *buttonImage = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(0, 16, 0, 16)];
</code></p>

<p>This requests that the left and right 16 pixels of the original image are not scaled or resized when stretching the image to accomodate the button size frame defined above. The end results is as shown below:</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-10-10-3.png">http://www.saick.net/images/blog/2013-10-10-3.png</a>"></p>

<p>Cap Insets with UIBarButtonItem
We can use the same image for a button on a navbar (I’ll show the specifics in the next post on customizing the navbar). Without specifying the cap insets, the button looks as follows:</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-10-10-4.png">http://www.saick.net/images/blog/2013-10-10-4.png</a>"></p>

<p>The code below specifies an image where 12 pixels on the top, left, bottom and right be preserved when stretching/resizing the button:
<code>
UIImage *backButton = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(12, 12, 12, 12)];
</code>
The output nows looks as follows:</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-10-10-5.png">http://www.saick.net/images/blog/2013-10-10-5.png</a>"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遭遇SIGPIPE]]></title>
    <link href="http://saick.net/blog/2013/10/10/zao-yu-sigpipe/"/>
    <updated>2013-10-10T23:35:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/zao-yu-sigpipe</id>
    <content type="html"><![CDATA[<p>《转》</p>

<p>我写了一个服务器程序, 在Windows下在cygwin环境编译后执行,
然后用C#写了多线程客户端进行压力测试. 程序一直运行正常.
但当在Linux下测试时, 总是莫名退出. 最后跟踪到是write调用导致退出.</p>

<p>用gdb执行程序, 退出时提示"Broken pipe".
最后问题确定为, 对一个对端已经关闭的socket调用两次write,
第二次将会生成SIGPIPE信号, 该信号默认结束进程.
具体的分析可以结合TCP的"四次握手"关闭. TCP是全双工的信道,
可以看作两条单工信道, TCP连接两端的两个端点各负责一条. 当对端调用close时,
虽然本意是关闭整个两条信道, 但本端只是收到FIN包. 按照TCP协议的语义,
表示对端只是关闭了其所负责的那一条单工信道, 仍然可以继续接收数据.</p>

<p>也就是说, 因为TCP协议的限制,
一个端点无法获知对端的socket是调用了close还是shutdown.
对一个已经收到FIN包的socket调用read方法, 如果接收缓冲已空, 则返回0,
这就是常说的表示连接关闭. 但第一次对其调用write方法时, 如果发送缓冲没问题,
会返回正确写入(发送). 但发送的报文会导致对端发送RST报文,
因为对端的socket已经调用了close, 完全关闭, 既不发送, 也不接收数据. 所以,
第二次调用write方法(假设在收到RST之后), 会生成SIGPIPE信号, 导致进程退出.</p>

<p>为了避免进程退出, 可以捕获SIGPIPE信号, 或者忽略它,
给它设置SIG_IGN信号处理函数:
<code>signal(SIGPIPE, SIG_IGN);</code>
这样, 第二次调用write方法时, 会返回-1, 同时errno置为SIGPIPE.
程序便能知道对端已经关闭.</p>

<p>PS: Linux下的SIGALRM似乎会每1秒钟往后偏移1毫秒, 但Windows下经过测试完全准时, 不差1毫秒.</p>

<h5>忽略SIGPIPE信号的方法</h5>

<p><a href="http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html">http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html</a></p>

<p><code>
struct sigaction sa;
sa.sa_handler = SIG_IGN;//设定接受到指定信号后的动作为忽略
sa.sa_flags = 0;
if (sigemptyset(&amp;sa.sa_mask) == -1 || //初始化信号集为空
sigaction(SIGPIPE, &amp;sa, 0) == -1) { //屏蔽SIGPIPE信号
perror("failed to ignore SIGPIPE; sigaction");
exit(EXIT_FAILURE);
}
</code></p>

<h5>pthread线程里如何屏蔽SIGPIPE异常</h5>

<p>hi.baidu.com/ailacy/blog/item/a7eb65f8b8b55707d8f9fdd5.html
<a href="http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1">http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1</a></p>

<p>在pthread中，可能会遇到Program received signal SIGPIPE, Broken
pipe的问题，解决方法是每一个线程启动之前时，先执行下面代码：</p>

<p>```</p>

<h1>ifndef WIN32</h1>

<p>sigset_t signal_mask;
sigemptyset (&amp;signal_mask);
sigaddset (&amp;signal_mask, SIGPIPE);
int rc = pthread_sigmask (SIG_BLOCK, &amp;signal_mask, NULL);
if (rc != 0) {
printf(&ldquo;block sigpipe error\n&rdquo;);
}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NaN问题 Not a Number]]></title>
    <link href="http://saick.net/blog/2013/10/10/nanwen-ti-not-a-number/"/>
    <updated>2013-10-10T23:26:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/nanwen-ti-not-a-number</id>
    <content type="html"><![CDATA[<p>这种错误是在float经过函数运行出了不是数字的值，nan的意思就是not a number。</p>

<p>主要常见原因：</p>

<ul>
<li>除以0</li>
<li>sizeWithFont的字符串为nil</li>
<li>数学函数不正确运算</li>
</ul>


<p>解决方法除了排除根源所在之外，用函数isnan()也是不错的选择（至少在没有彻底解决以前）
如下</p>

<p><code>
float _x = NAN;
if (!isnan(_x)) {
cell.imgView.frame = CGRectMake(_x, 8, 10, 12);
}
</code></p>

<p>引自：<a href="http://www.minroad.com/?p=403">http://www.minroad.com/?p=403</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode工程目录的 folder 和 group的区别(蓝色和黄色文件夹的区别)]]></title>
    <link href="http://saick.net/blog/2013/09/23/xcodegong-cheng-mu-lu-de-folder-he-groupde-qu-bie-lan-se-he-huang-se-wen-jian-jia-de-qu-bie/"/>
    <updated>2013-09-23T23:58:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/23/xcodegong-cheng-mu-lu-de-folder-he-groupde-qu-bie-lan-se-he-huang-se-wen-jian-jia-de-qu-bie</id>
    <content type="html"><![CDATA[<p>XCode工程目录里面，有时你会发现2个不同颜色的文件夹，一种是蓝色的，一种是黄色的，最常见的是黄色的，我也是最近学习html5的时候，发现还有蓝色的文件夹呢，
来上图看下吧</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-09-23-1.png">http://www.saick.net/images/blog/2013-09-23-1.png</a>"></p>

<p> 上图所示，蓝色的是folder 黄色的是group。 那么它们有什么区别呢？
1. group 和 folder的区别
group 一般只在你的工程中是文件夹的形式，但是在本地的目录中还是以散乱的形式放在一起的，除非你是从外部以group的形式引用进来的。
folder 只能作为资源，整个引用进项目，不能编译代码，也就是说，以folder形式引用进来的文件，不能被放在complie sources列表里面。
2. 以folder的形式引用文件
我拖动外部的文件夹 WebViewJavascriptBridge 到我的xcode工程目录下面
会弹出对话框，如图</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-09-23-2.png">http://www.saick.net/images/blog/2013-09-23-2.png</a>"></p>

<p>copy，是指文件不在项目的目录下面，例如项目在桌面上，文件在 Download 下，你 copy 就会被复制到项目里面。如果文件原本就在项目里面，则不执行任何操作。这里不管它，重点是 下面的单选框。
这里我选择的是以folder的形式引用文件夹，点击完成，如下图所示，文件夹是蓝色的，并且编译文件列表里面没有 webviewjavascriptBridge.m这个文件，证明文件夹引用，只会引用文件夹，文件夹里面的东西都会直接拷贝到 bundle 包，不参与编译。</p>

<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-09-23-3.png">http://www.saick.net/images/blog/2013-09-23-3.png</a>"></p>

<ol>
<li>以group的形式引用文件
回到1的第一步，选中 create groups for any added folders ，点击完成，则如下图所示，文件夹是黄色的，并且编译文件列表里面神奇的存在了 webviewjavascriptBridge.m这个文件</li>
</ol>


<p><img class="<a" src="href="http://www.saick.net/images/blog/2013-09-23-4.png">http://www.saick.net/images/blog/2013-09-23-4.png</a>"></p>

<p>现在，终于明白了 folder和 group的区别了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用unit test，资源获取注意事项]]></title>
    <link href="http://saick.net/blog/2013/09/23/shi-yong-unit-test%2Czi-yuan-huo-qu-zhu-yi-shi-xiang/"/>
    <updated>2013-09-23T23:42:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/23/shi-yong-unit-test,zi-yuan-huo-qu-zhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<h3>引言</h3>

<p> 使用XCode4.5 下使用unit test时，发现直接使用
 <code>
 UIImage *imgA = [UIImage imageNamed:@"asdf"];
 NSString *resourcePath = [[NSBundle mainBundle] pathForResource:@”xxx.json”ofType:nil];
</code>
 得不到资源，调查一下原来是这样，怪不得人们写代码不想用imageNamed呢。</p>

<h3>一、基础知识</h3>

<h4>1，官方教程</h4>

<p>　　单元测试包含“逻辑测试”和“应用测试”两种类型，分别对应不同的配置方式：
　　逻辑测试(Logic Unit Test):测试跟App运行过程无关的纯逻辑代码，比如随机数算法，数据结构一类的。
　　应用测试(Application Unit test):测试跟App运行环境相关的代码，比如目录、文件操作，Core Data存取等。
　　在Xcode4.5中，创建App时会自动创建Application Unit Test项目。</p>

<h4>2，示例代码。</h4>

<p>　　在Xcode documentation中，可以找到“iPhoneUnitTests”这个例子项目。这个项目会教你怎么写单元测试代码。</p>

<h3>二、进阶问题</h3>

<h4>1，访问被测类</h4>

<p>(在Logic Unit Test模式的要求，Application Unit Test不必设置) 比如在App中定义了FundManager.h这个接口，要想在单元测试中访问这个接口：</p>

<pre><code>1，#import ”FundManager.h"    
2，在单元测试的target中，Build Phases选项卡，Compile Sources区域中，增加FundManager.m文件。  
</code></pre>

<p>　　否则会在链接阶段找不到FundManager接口。
　　</p>

<h4>2，向单元测试目标中添加资源</h4>

<p>　　比如要测试的某个接口需要UIImage对象，需要一张图片来初始化UIImage对象，直接调用[UIImage imageNamed:@”xxx”]是不行的，因为这个接口要从App的main bundle中加载图像，不能直接访问添加到单元测试项目中的资源，下面代码演示了两个bundle目录的不同：</p>

<p><code>
Resource Paths are Different!
Many assumptions that your bundle is the main bundle will cause problems when testing. (Especially when adding tests to existing code) Look at the difference in bundles, the main bundle isn’t what you’d expect in a unit test.
NSString *mainBundlePath = [[NSBundle mainBundle] resourcePath];
NSString *directBundlePath = [[NSBundle bundleForClass:[self class]] resourcePath];
NSLog(@”Main Bundle Path: %@”, mainBundlePath);
NSLog(@”Direct Path: %@”, directBundlePath);
NSString *mainBundleResourcePath = [[NSBundle mainBundle] pathForResource:@”Frame.png”ofType:nil];
NSString *directBundleResourcePath = [[NSBundle bundleForClass:[selfclass]] pathForResource:@”Frame.png” ofType:nil];
NSLog(@”Main Bundle Path: %@”, mainBundleResourcePath);
NSLog(@”Direct Path: %@”, directBundleResourcePath);
</code>
解决方法：
<code>
Load resources using the bundle for the current classNSString *imagePath = [[NSBundle bundleForClass:[self class]] pathForResource:theImageName ofType:nil];
UIImage *image = [UIImage imageWithContentsOfFile:imagePath];
</code></p>
]]></content>
  </entry>
  
</feed>
