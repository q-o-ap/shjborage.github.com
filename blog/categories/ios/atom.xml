<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Saick Blog]]></title>
  <link href="http://saick.net/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-10-14T16:23:19+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[多参数selector]]></title>
    <link href="http://saick.net/blog/2013/10/14/duo-can-shu-selector/"/>
    <updated>2013-10-14T16:09:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/14/duo-can-shu-selector</id>
    <content type="html"><![CDATA[<p>Selector是Objective-C一个非常强大的特性，合理使用Selector可以大大简化实现并避免重复代码。但NSObject提供 的performSelector最多只支持两个参数，对于两个以上的参数就无能为力了。一番调查后针对NSObject增加了如下扩展，使得 performSelector可以支持传入参数数组。多个参数就不再是问题了。</p>

<p>{% codeblock %}
@interface NSObject (Addition)
&ndash; (id)performSelector:(SEL)selector withObjects:(NSArray *)objects;
@end</p>

<p>@implementation NSObject (Addition)
&ndash; (id)performSelector:(SEL)selector withObjects:(NSArray *)objects {</p>

<pre><code>NSMethodSignature *signature = [self methodSignatureForSelector:selector]; 
if (signature) { 
    NSInvocation* invocation = [NSInvocation invocationWithMethodSignature:signature]; 
    [invocation setTarget:self]; 
    [invocation setSelector:selector]; 

    for(int i = 0; i &amp;lt; [objects count]; i++){ 
        id object = [objects objectAtIndex:i]; 
        [invocation setArgument:&amp;object atIndex: (i + 2)];        
    } 

    [invocation invoke]; 

    if (signature.methodReturnLength) { 
        id anObject; 
        [invocation getReturnValue:&amp;anObject]; 
        return anObject; 
    } else { 
        return nil; 
    } 
} else { 
    return nil; 
} 
</code></pre>

<p>}</p>

<p>@end
{% endcodeblock %}</p>

<p>本文出自 “林家男孩” 博客，请务必保留此出处<a href="http://bj007.blog.51cto.com/1701577/538995">http://bj007.blog.51cto.com/1701577/538995</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7 初步适配，与iOS6共存]]></title>
    <link href="http://saick.net/blog/2013/10/14/ios7-chu-bu-gua-pei-%2Cyu-ios6gong-cun/"/>
    <updated>2013-10-14T15:43:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/14/ios7-chu-bu-gua-pei-,yu-ios6gong-cun</id>
    <content type="html"><![CDATA[<h4>状态栏隐藏问题</h4>

<p><strong>使用代码</strong>
{% codeblock %}
&ndash; (BOOL)prefersStatusBarHidden
{
  return _isStatusHidden;//隐藏为YES，显示为NO
}</p>

<ul>
<li>(void)hideStatusBar:(BOOL)isHidden
{
if ([self respondsToSelector:@selector(setNeedsStatusBarAppearanceUpdate)]) {
  // iOS 7
  _isStatusHidden = isHidden;
  [self performSelector:@selector(setNeedsStatusBarAppearanceUpdate)];
} else {
  [[UIApplication sharedApplication] setStatusBarHidden:isHidden];
}
}
{% endcodeblock %}</li>
</ul>


<p><strong>Catagory</strong> 此处与root ViewController有关，不一定这样解决
{% codeblock %}
@implementation UINavigationController (StatusBar)</p>

<ul>
<li><p>(UIStatusBarStyle)preferredStatusBarStyle
{
return UIStatusBarStyleLightContent;
}</p></li>
<li><p>(BOOL)prefersStatusBarHidden
{
if ([[self topViewController] isKindOfClass:[MovieDetailViewController class]]) {
  MovieDetailViewController <em>movieVC = (MovieDetailViewController </em>)[self topViewController];
  return [movieVC prefersStatusBarHidden];
}</p>

<p>return NO;
}</p></li>
</ul>


<p>@end
{% endcodeblock %}</p>

<h4>与iOS6 共存问题</h4>

<p><strong>旋转方面还是iOS6里面那些改动，iOS7基本上没啥变化</strong></p>

<p>主要区别就是相对坐标问题，简单处理如下：</p>

<p>定义全局父类，使得所有ViewController处理些事件。<em>每个都加显然很麻烦的啦</em></p>

<p>```
//global_Header.h中相关的定义</p>

<h1>define kOSVersion (double)([[[UIDevice currentDevice] systemVersion] length] > 0 ? \</h1>

<p>(double)[[[UIDevice currentDevice] systemVersion] doubleValue] : (double)kMinOSVersion)
```</p>

<p>{% codeblock %}</p>

<p>//
//  UniversalViewController.m
//  BFServiceStation
//
//  Created by Eric on 10/7/13.
//  Copyright &copy; 2013 Baofeng. All rights reserved.
//</p>

<h1>import &ldquo;UniversalViewController.h&rdquo;</h1>

<h1>import &ldquo;global_Header.h&rdquo;</h1>

<p>@interface UniversalViewController ()</p>

<p>@end</p>

<p>@implementation UniversalViewController</p>

<ul>
<li><p>(id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
if (self) {
  // Custom initialization
}
return self;
}</p></li>
<li><p>(void)viewDidLoad
{
[super viewDidLoad];
  // Do any additional setup after loading the view.</p>

<p>if (kOSVersion >= 7.0f) {
  self.automaticallyAdjustsScrollViewInsets = NO;
  [self setEdgesForExtendedLayout:UIRectEdgeNone];
}
}</p></li>
<li><p>(void)didReceiveMemoryWarning
{
[super didReceiveMemoryWarning];
// Dispose of any resources that can be recreated.
}</p></li>
</ul>


<p>@end</p>

<p>{% endcodeblock %}</p>

<p>// 引用自CocoaChina</p>

<ul>
<li>1、如果设置了self.navigationController.navigationBar 设置了UIBarMetricsLandscapePhone的背景;而没有设置UIBarMetricsDefault的背景，navigationBar会变透明</li>
</ul>


<p>如图所示： navigationBar透明</p>

<p>{% img <a href="http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=177bc31d0ef3d7ca08f63f73c224cf34/730e0cf3d7ca7bcb851f430cbc096b63f624a8a9.jpg?referer=3f277b9367380cd7bf0997dd0867&amp;x=.jpg">http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=177bc31d0ef3d7ca08f63f73c224cf34/730e0cf3d7ca7bcb851f430cbc096b63f624a8a9.jpg?referer=3f277b9367380cd7bf0997dd0867&amp;x=.jpg</a> %}</p>

<ul>
<li>2、上图还出现了一个问题，如果没有设置self.automaticallyAdjustsScrollViewInsets = NO，那么iOS7下会自动让scrollView滑动多次，以满足UITableView第一行的显示需要，这又带来了另外一个问题，下拉刷新的View的frame也随之发生了改变，导致整个下拉刷新不可用了</li>
<li>3、self.automaticallyAdjustsScrollViewInsets 这个属性是IOS7才有的新方法，目的就是为了让scrollView自动适应屏幕，如果self.automaticallyAdjustsScrollViewInsets = NO，那么效果会变成下图所示：</li>
</ul>


<p>{% img <a href="http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=e257bde0d5ca7bcb797bc72a8e321a5e/0df3d7ca7bcb0a4662460f1a6963f6246b60afa9.jpg?referer=5ad9d42b0ed79123b9f7a1440967&amp;x=.jpg">http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=e257bde0d5ca7bcb797bc72a8e321a5e/0df3d7ca7bcb0a4662460f1a6963f6246b60afa9.jpg?referer=5ad9d42b0ed79123b9f7a1440967&amp;x=.jpg</a> %}</p>

<p>我的ViewController继承的是UITableViewController, 所以TableView是随系统而产生的，在IOS7之前，tableView的Frame的起始点是(0, 20),在IOS7之后，它的起始点变成了(0,0),这个时候如果为了让下拉刷新能正常工作，必须设置self.edgesForExtendedLayout = UIRectEdgeNone
（这种情况适用于容器建立在UINavigationController）.</p>

<ul>
<li>4、如果设置了self.navigationController.navigationBar 设置UIBarMetricsDefault的背景为空，则默认的是IOS7上边栏平铺效果，如果设置了图片，并且这个图片高度保持在44（88）,那么IOS5,6,7的效果是一致的。</li>
<li>5、iOS7中的StatusBar的没有了背景，他的UIStatusBarStyleLightContent和UIStatusBarStyleDefault只会改变StatusBar的文字，都不会有背景</li>
<li><p>6、ViewController-Based Status Bar Appearance控制了StatusBar的外观，如果设置为YES，则会调用preferredStatusBarStyle。如果为NO,则通过传统方式来控制</p>

<p>下图示IOS6，7上的正常情况</p></li>
</ul>


<p>{% img <a href="http://f.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=d9ddefcc8fb1cb133a693c16ed6f2773/5fdf8db1cb134954e4566c47544e9258d1094a4d.jpg?referer=57d47c02708b47109738c8fcb643&amp;x=.jpg">http://f.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=d9ddefcc8fb1cb133a693c16ed6f2773/5fdf8db1cb134954e4566c47544e9258d1094a4d.jpg?referer=57d47c02708b47109738c8fcb643&amp;x=.jpg</a> %}</p>

<p>{% img <a href="http://b.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=9ec7af048882b90139adc33643b6d84a/1f178a82b9014a90a738c29eab773912b31bee8b.jpg?referer=40e418ff881363274cfaf7034a89&amp;x=.jpg">http://b.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=9ec7af048882b90139adc33643b6d84a/1f178a82b9014a90a738c29eab773912b31bee8b.jpg?referer=40e418ff881363274cfaf7034a89&amp;x=.jpg</a> %}</p>

<p>{% img <a href="http://d.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=f3066050af4bd11300cdb7376a94d532/d043ad4bd11373f0b991ebbca60f4bfbfbed0462.jpg?referer=888f3612a38b87d609559e2f6421&amp;x=.jpg">http://d.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=f3066050af4bd11300cdb7376a94d532/d043ad4bd11373f0b991ebbca60f4bfbfbed0462.jpg?referer=888f3612a38b87d609559e2f6421&amp;x=.jpg</a> %}</p>

<p>7、在IOS7下，如果不设置navigationBar的背景图片，而且设置[navigationBar setBarStyle:UIBarStyleBlackTranslucent];可以获取默认的黑色毛玻璃效果哟</p>

<p>如果大家还有遇到一些奇怪的问题，欢迎大家来补充</p>

<p>{% img <a href="http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=f5b2e0c983cb39dbc5c06753e02d7819/50da81cb39dbb6fd7a1061050b24ab18972b374d.jpg?referer=aa507eef1c178a82972b4a907144&amp;x=.jpg">http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=f5b2e0c983cb39dbc5c06753e02d7819/50da81cb39dbb6fd7a1061050b24ab18972b374d.jpg?referer=aa507eef1c178a82972b4a907144&amp;x=.jpg</a> %}</p>

<p>本文参考文档:</p>

<p><a href="http://blog.jaredsinclair.com/post/61507315630/wrestling-with-status-bars-and-navigation-bars-on-ios-7">http://blog.jaredsinclair.com/post/61507315630/wrestling-with-status-bars-and-navigation-bars-on-ios-7</a>
<a href="https://developer.apple.com/library/ios/documentation/userexperience/conceptual/TransitionGuide/index.html">https://developer.apple.com/library/ios/documentation/userexperience/conceptual/TransitionGuide/index.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给xcode工程做命令行build]]></title>
    <link href="http://saick.net/blog/2013/10/14/gei-xcodegong-cheng-zuo-ming-ling-xing-build/"/>
    <updated>2013-10-14T14:59:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/14/gei-xcodegong-cheng-zuo-ming-ling-xing-build</id>
    <content type="html"><![CDATA[<p>XCode工程其实是可以用命令行来build的，这样就可以用命令行编译出.app的文件，然后就可以打成ipa包。整个流程做到自动化后，就可以方便的做每日的daily build，便于产品和测试同事跟进进度，随时获得最新版本的ipa文件。</p>

<p>XCode工程的命令行Build命令是 xcodebuild，用 &mdash;help 可以看到一些有用的参数。常用的是xcodebuild -configuration Release 指定用Release方式编译。</p>

<p>另外，将.app文件转成ipa包的方式也相当简单。具体方式是将 .app文件拷贝到一个名为 ipa/Payload的目录下，然后将ipa下的所有内容用zip打包即可：</p>

<p>```</p>

<pre><code>  mkdir -p ipa/Payload
  cp -r ./Release-iphoneos/PRODUCT_NAME.app  ./ipa/Payload/
  cd ipa
  zip -r $FILE_NAME *
</code></pre>

<p>```</p>

<p>如果要将打好的ipa包上传到服务器上面去，再加一些脚本即可，我们是放到一个再windows共享的web server目录下，于是可以用smbclient来连接windows共享和上传ipa包：</p>

<p>```</p>

<pre><code>  echo "put FILE_NAME.ipa" | smbclient //主机名 -U 用户名%密码
</code></pre>

<p>```</p>

<p>附上所有想着的XCode命令</p>

<h6>1.查看xcode的版本号和build版本</h6>

<p><code>
$ xcodebuild -version
</code></p>

<p>显示内容：</p>

<p><code>
Xcode 4.2Build version 4D199
</code></p>

<h6>2.显示当前系统的sdk、及其版本</h6>

<p><code>
$ xcodebuild -showsdks
</code></p>

<p>显示内容：</p>

<p><code>
Mac OS X SDKs:    Mac OS X 10.6                     -sdk macosx10.6    Mac OS X 10.7                     -sdk macosx10.7iOS SDKs:    iOS 5.0                           -sdk iphoneos5.0iOS Simulator SDKs:    Simulator - iOS 5.0               -sdk iphonesimulator5.0
</code></p>

<h6>3.显示工程项目信息</h6>

<p>先cd到工程目录下（有＊.xcodeproj的目录，比如MakeFileTest.xcodeproj），然后输入命令
<code>
$ xcodebuild -list
</code></p>

<p>显示内容</p>

<p><code>
Information about project "MakeFileTest":    
Targets:        MakeFileTest    
Build Configurations:        Debug        Release    If no build configuration is specified and -scheme is not passed then "Release" is used.    
Schemes:        MakeFileTest
</code></p>

<p>如果未指定Configurations，默认为release</p>

<h6>4.xcodebuild用法：</h6>

<h6>#1）用ios5.0模拟器（iphonesimulator5.0）建立工程</h6>

<p><code>
$ xcodebuild -sdk iphonesimulator5.0
</code></p>

<p>输出一堆编译过程，最后输出<strong> BUILD SUCCEEDED </strong>表示创建成功；
若输出<strong> BUILD FAILED </strong>表示创建失败
成功后会在当前工程目录下创建build目录，结构如下：</p>

<p>{% img <a href="http://e.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=15fd0cff0afa513d55aa6cdb0d5624c6/a1ec08fa513d2697dd9c917e57fbb2fb4316d842.jpg?referer=dfc765f917ce36d3fb13b6001840&amp;x=.jpg">http://e.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=15fd0cff0afa513d55aa6cdb0d5624c6/a1ec08fa513d2697dd9c917e57fbb2fb4316d842.jpg?referer=dfc765f917ce36d3fb13b6001840&amp;x=.jpg</a> %}</p>

<p>MakeFileTest.app就是编译生成的可执行文件，
而MakeFileTest.build文件夹下是一些中间文件</p>

<p>{% img <a href="http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=a14904c0ff1f4134e437057b1524e4f7/a9d3fd1f4134970a3719890c97cad1c8a7865dae.jpg?referer=869c95c8b4fd5266fe3c09249b64&amp;x=.jpg">http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=a14904c0ff1f4134e437057b1524e4f7/a9d3fd1f4134970a3719890c97cad1c8a7865dae.jpg?referer=869c95c8b4fd5266fe3c09249b64&amp;x=.jpg</a> %}</p>

<h6>#2）默认是Release工程，要设置成Debug模式如下：</h6>

<p><code>
$ xcodebuild -sdk iphonesimulator5.0 -configuration Debug
</code></p>

<h6>#3）clean创建的工程</h6>

<p><code>
$ xcodebuild clean -sdk iphonesimulator5.0 -configuration Debug
</code>
成功输出<strong>CLEAN SUCCEEDED</strong></p>

<h6>5.xcodebuild的编译参数</h6>

<p>下面说运行从命令行中运行应用程序:</p>

<p>需要一个小工具iphonesim,从 <a href="https://github.com/hborders/iphonesim/">https://github.com/hborders/iphonesim/</a> 下载后编译成为一个可执行文件,用它来启动iphone模拟器.
由于模拟器不支持多个实例,所以运行前记得先把模拟器给关掉。按照以下命令来执行吧!</p>

<p><code>
iphonesim launch /Users/TadoSoft/Library/Application\ Support/iPhone\ Simulator/4.3.2/Applications/ED845558-5168-45C0-BA98-43AB3C238E9F/Krowdit.app/
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 5 : UIImage and resizableImageWithCapInsets]]></title>
    <link href="http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets/"/>
    <updated>2013-10-10T23:41:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets</id>
    <content type="html"><![CDATA[<p>I recently began writing a short example to learn more about the iOS 5 Appearance API and customizing UINavigationBar objects. The goal was to add a custom background, title and text to the navbar. Once I had this working, to keep a consist look across my application, I began tweaking the buttons on the navbar using the same Appearance API.
As I got further into the customization of the buttons, I ran into a method withinUIImage that was introduced in iOS 5, resizableImageWithCapInsets. I found myself getting side-tracked from the original idea of navbar look and feel, to understanding how cap insets work. This post delves into what I learned.</p>

<p>Cap Insets with UIButton
As the documentation describes, you use resizableImageWithCapInsets to add cap insets to an image, when the image is resized or scaled, cap areas are not affected. The best way to understand this is through an example.
Let’s assume I want all the buttons on my UI to have a similar look, a gradient with a white border. Below is the image used for the examples in this post (the button is shown on a gray backdrop so you can see the white border):</p>

<p>{% img <a href="http://d.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=8cf958067d3e6709ba0045fa0bfcee00/c8177f3e6709c93d5bb0aad69d3df8dcd1005454.jpg?referer=1e8577dc79899e5121990f24944a&amp;x=.jpg">http://d.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=8cf958067d3e6709ba0045fa0bfcee00/c8177f3e6709c93d5bb0aad69d3df8dcd1005454.jpg?referer=1e8577dc79899e5121990f24944a&amp;x=.jpg</a> %}</p>

<p>Depending on the context of where the button appears, its size may vary. The code to create a button with the image and the corresponding output follow:
{% codeblock %}
UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(80, 130, 160, 44)];<br/>
[button setTitle:@&ldquo;Test Button&rdquo; forState:UIControlStateNormal];</p>

<p>// Image with without cap insets
UIImage *buttonImage = [UIImage imageNamed:@&ldquo;blueButton&rdquo;];</p>

<p>[button addTarget:self action:@selector(buttonPressed:) forControlEvents: UIControlEventTouchUpInside];
[button setBackgroundImage:buttonImage forState:UIControlStateNormal];
[[self view] addSubview:button];
{% endcodeblock %}</p>

<p>{% img <a href="http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=040338663b12b31bc36ccd2cb6234747/a8773912b31bb0518f971709347adab44aede064.jpg?referer=e60131fd0afa513d08bd59ee403a&amp;x=.jpg">http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=040338663b12b31bc36ccd2cb6234747/a8773912b31bb0518f971709347adab44aede064.jpg?referer=e60131fd0afa513d08bd59ee403a&amp;x=.jpg</a> %}</p>

<p>As you can see, the button is stretched in all directions. Let’s change the code to include cap insets, however, before we do that, let’s look at the signature of the cap insets method:</p>

<p><code>
- (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets
</code></p>

<p>Looking on step further, UIEdgeInserts is defined as:
```
typedef struct {</p>

<pre><code> CGFloat top, left, bottom, right;
</code></pre>

<p>} UIEdgeInsets;
```</p>

<p>UIEdgeInsets is structure that specifies float values for each cap inset: top, left, bottom and right areas of an image. To apply this to the image for the button, here is all we need to do:
<code>
// Image with cap insets
UIImage *buttonImage = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(0, 16, 0, 16)];
</code></p>

<p>This requests that the left and right 16 pixels of the original image are not scaled or resized when stretching the image to accomodate the button size frame defined above. The end results is as shown below:</p>

<p>{% img <a href="http://g.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=5daa3c7fdfc451daf2f60cee86c6235b/ac6eddc451da81cb7fa427ec5066d01609243154.jpg?referer=f13ad2b88026cffc303d8a827f4b&amp;x=.jpg">http://g.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=5daa3c7fdfc451daf2f60cee86c6235b/ac6eddc451da81cb7fa427ec5066d01609243154.jpg?referer=f13ad2b88026cffc303d8a827f4b&amp;x=.jpg</a> %}</p>

<p>Cap Insets with UIBarButtonItem
We can use the same image for a button on a navbar (I’ll show the specifics in the next post on customizing the navbar). Without specifying the cap insets, the button looks as follows:</p>

<p>{% img <a href="http://c.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=98f5931979f40ad111e4c7e6671760e2/03087bf40ad162d9605dc63d13dfa9ec8a13cd64.jpg?referer=9ebd1655e9f81a4c7f25d9f92b3a&amp;x=.jpg">http://c.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=98f5931979f40ad111e4c7e6671760e2/03087bf40ad162d9605dc63d13dfa9ec8a13cd64.jpg?referer=9ebd1655e9f81a4c7f25d9f92b3a&amp;x=.jpg</a> %}</p>

<p>The code below specifies an image where 12 pixels on the top, left, bottom and right be preserved when stretching/resizing the button:
<code>
UIImage *backButton = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(12, 12, 12, 12)];
</code>
The output nows looks as follows:</p>

<p>{% img <a href="http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=9f523ed27b310a55c024def1877e3294/aec379310a55b31983a0265441a98226cffc17b1.jpg?referer=06628c84087b020855de0ad15150&amp;x=.jpg">http://a.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=9f523ed27b310a55c024def1877e3294/aec379310a55b31983a0265441a98226cffc17b1.jpg?referer=06628c84087b020855de0ad15150&amp;x=.jpg</a> %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遭遇SIGPIPE]]></title>
    <link href="http://saick.net/blog/2013/10/10/zao-yu-sigpipe/"/>
    <updated>2013-10-10T23:35:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/zao-yu-sigpipe</id>
    <content type="html"><![CDATA[<p>《转》</p>

<p>我写了一个服务器程序, 在Windows下在cygwin环境编译后执行,
然后用C#写了多线程客户端进行压力测试. 程序一直运行正常.
但当在Linux下测试时, 总是莫名退出. 最后跟踪到是write调用导致退出.</p>

<p>用gdb执行程序, 退出时提示"Broken pipe".
最后问题确定为, 对一个对端已经关闭的socket调用两次write,
第二次将会生成SIGPIPE信号, 该信号默认结束进程.
具体的分析可以结合TCP的"四次握手"关闭. TCP是全双工的信道,
可以看作两条单工信道, TCP连接两端的两个端点各负责一条. 当对端调用close时,
虽然本意是关闭整个两条信道, 但本端只是收到FIN包. 按照TCP协议的语义,
表示对端只是关闭了其所负责的那一条单工信道, 仍然可以继续接收数据.</p>

<p>也就是说, 因为TCP协议的限制,
一个端点无法获知对端的socket是调用了close还是shutdown.
对一个已经收到FIN包的socket调用read方法, 如果接收缓冲已空, 则返回0,
这就是常说的表示连接关闭. 但第一次对其调用write方法时, 如果发送缓冲没问题,
会返回正确写入(发送). 但发送的报文会导致对端发送RST报文,
因为对端的socket已经调用了close, 完全关闭, 既不发送, 也不接收数据. 所以,
第二次调用write方法(假设在收到RST之后), 会生成SIGPIPE信号, 导致进程退出.</p>

<p>为了避免进程退出, 可以捕获SIGPIPE信号, 或者忽略它,
给它设置SIG_IGN信号处理函数:
<code>signal(SIGPIPE, SIG_IGN);</code>
这样, 第二次调用write方法时, 会返回-1, 同时errno置为SIGPIPE.
程序便能知道对端已经关闭.</p>

<p>PS: Linux下的SIGALRM似乎会每1秒钟往后偏移1毫秒, 但Windows下经过测试完全准时, 不差1毫秒.</p>

<h5>忽略SIGPIPE信号的方法</h5>

<p><a href="http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html">http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html</a></p>

<p><code>
struct sigaction sa;
sa.sa_handler = SIG_IGN;//设定接受到指定信号后的动作为忽略
sa.sa_flags = 0;
if (sigemptyset(&amp;sa.sa_mask) == -1 || //初始化信号集为空
sigaction(SIGPIPE, &amp;sa, 0) == -1) { //屏蔽SIGPIPE信号
perror("failed to ignore SIGPIPE; sigaction");
exit(EXIT_FAILURE);
}
</code></p>

<h5>pthread线程里如何屏蔽SIGPIPE异常</h5>

<p>hi.baidu.com/ailacy/blog/item/a7eb65f8b8b55707d8f9fdd5.html
<a href="http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1">http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1</a></p>

<p>在pthread中，可能会遇到Program received signal SIGPIPE, Broken
pipe的问题，解决方法是每一个线程启动之前时，先执行下面代码：</p>

<p>```</p>

<h1>ifndef WIN32</h1>

<p>sigset_t signal_mask;
sigemptyset (&amp;signal_mask);
sigaddset (&amp;signal_mask, SIGPIPE);
int rc = pthread_sigmask (SIG_BLOCK, &amp;signal_mask, NULL);
if (rc != 0) {
printf(&ldquo;block sigpipe error\n&rdquo;);
}
```</p>
]]></content>
  </entry>
  
</feed>
