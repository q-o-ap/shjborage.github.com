<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: other | Saick Blog - 专注技术，乐在其中]]></title>
  <link href="http://saick.net/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-10-17T11:10:31+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在github上使用octopress]]></title>
    <link href="http://saick.net/blog/2013/08/22/zai-githubshang-shi-yong-octopress/"/>
    <updated>2013-08-22T10:55:00+08:00</updated>
    <id>http://saick.net/blog/2013/08/22/zai-githubshang-shi-yong-octopress</id>
    <content type="html"><![CDATA[<p>Octopress是使用ruby语言编写的一套建立在jekyll之上的博客系统，它有一些很独特的特点：</p>

<ol>
<li>使用静态页面；</li>
<li>不使用数据库；</li>
<li>使用markdown标记语言编写文章；</li>
<li>可以与git紧密集成，方便地进行博客的版本管理；</li>
<li>可以于Github Pages集成，不需要单独的web hosting，只要你有github帐号即可。</li>
</ol>


<p>这些特点中的第三点到第五点尤其吸引我（第一点和第二点也很酷），于是我花了些时间研究。以下是相关的步骤和心得。</p>

<h4>在你本地安装octopress</h4>

<p>说“安装”可能不太恰当，准确的说是你需要从github上取得octopress的代码并进行些许配置。步骤请参考这里。</p>

<ol>
<li><p>安装RVM(Ruby Version Manager)并使用”Ruby 1.9.2″作为你本地的ruby实现，这事我之前按照这篇文章做过，这里就不详细说了，你也可以按照octopress官方的介绍来安装RVM。</p></li>
<li><p>从github得到octopress代码，运行以下命令：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress    # If you use RVM, You&rsquo;ll be asked if you trust the .rvmrc file (say yes).
</span><span class='line'>ruby &mdash;version  # Should report Ruby 1.9.2&lt;/p>&lt;/li>
</span><span class='line'>&lt;/ol>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p>gem install bundler # Install dependencies
</span><span class='line'>bundle install&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>rake install # Install the default Octopress theme</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>配置你本地的octopress，使之可以发布到你的github pages</p>

<p><code>
rake setup_github_pages
Enter the read/write url for your repository
(For example, 'git@github.com:your_username/your_username.github.com)
Repository url:
</code></p>

<p>请输入：git@github.com:yourname/yourname.github.com.git (将yourname替换成你的github登录名)</p>

<p>这个步骤rake会做很多事情：</p>

<p>在.git/config中替换origin为你输入的repository，并把原来的origin写到octopress中。
创建新的branch source并切换到这个branch。
在生成的_deploy目录下，初始化git repository为你的repository。
以下是两个git config的内容，just for your information。</p>

<p>```
tchen@tchen-mbp:~/projects/octopress$ cat .git/config
[core]</p>

<pre><code>repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
ignorecase = true
</code></pre>

<p>[remote &ldquo;octopress&rdquo;]</p>

<pre><code>url = git://github.com/imathis/octopress.git
fetch = +refs/heads/*:refs/remotes/octopress/*
</code></pre>

<p>[branch &ldquo;source&rdquo;]</p>

<pre><code>remote = origin
merge = refs/heads/master
rebase = true
</code></pre>

<p>[remote &ldquo;origin&rdquo;]</p>

<pre><code>url = git@github.com:tyrchen/tyrchen.github.com.git
fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>tchen@tchen-mbp:~/projects/octopress$ cat _deploy/.git/config
[core]</p>

<pre><code>repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
ignorecase = true
</code></pre>

<p>[remote &ldquo;origin&rdquo;]</p>

<pre><code>url = git@github.com:tyrchen/tyrchen.github.com.git
fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>```</p>

<p>这样就可以做到：你在本地创建博客文章(当然是用markdown写成的)，然后直接deploy到你的github pages repo，github会自动进行发布。也就是说：所有发博客的动作只需要在你本地用命令完成，酷吧！</p>

<p>参考了这里<a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a>。</p>

<ul>
<li>1.创建你的github pages repo</li>
</ul>


<p>如果你的github用户名是username，那个就创建一个名称为”username.github.com”的repo，这个repo就是你的github pages repo，更多信息可以参考这里。</p>

<ul>
<li>2.在你本地运行以下命令，octopress会自动帮你进行配置：
<code>
cd your_local_octopress_directory
rake setup_github_pages
</code>
注意：当命令提示你输入github URL时，请使用这个格式的URL: “git@github.com:username/username.github.com.git”</li>
</ul>


<p>当这个命令运行完成之后，你的github pages repo会有两个branches: master branch用于静态页面的发布(“octopress/<em>deploy”的内容)，source branch用于保存你的blog内容（”octopress”目录中除了”</em>deploy”的其它内容）</p>

<p>到这里基本的配置就完成了，你还可以参考这里配置你博客的名称等信息。</p>

<h4>编写并发布文章</h4>

<ul>
<li>1.写文章</li>
</ul>


<p>cd your_local_octopress_directory
rake new_post[&ldquo;Your Title of Your Article&rdquo;]
该命令会在你的”octopress/source/_posts”目录下生成对应的”.markdown”文件，用任意文本编辑器编辑，使用markdown语法编写你的文章。</p>

<ul>
<li>2.生成，预览并发布：
<code>
cd your_local_octopress_directory
rake generate # generate your blog static pages content according to your input.
rake preview # start a web server on "http://localhost:4000", you can preview your blog content.
rake deploy # push your static pages content to your github pages repo ("master" branch)
</code>
还有很重要的一步是把你的修改(文本修改，不包含”_deploy”目录，”deploy”目录保存”rake generate”生成的静态页面内容，会被”rake deploy”命令提交到”master branch”)放到你的github pages(“source” branch)上:
<code>
cd your_local_octopress_directory
git add .
git commit -m 'your message'
git push origin source
</code></li>
</ul>


<h4>个性化</h4>

<p>添加个人域名
在octopress目录下：</p>

<p><code>
$ echo 'blog.yourdomain.com' &gt;&gt; source/CNAME
</code></p>

<p>然后在你的DNS服务商，如 dnspod.cn，添加相应的CNAME指向 yourname.github.com。如果你要使用顶级域名，如 <a href="http://yourdomain.com">http://yourdomain.com</a> 访问你的博客，则需要使用A记录指向 207.97.227.245。详细内容请参考：<a href="http://octopress.org/docs/deploying/github/%E3%80%82">http://octopress.org/docs/deploying/github/%E3%80%82</a></p>

<h4>设置博客</h4>

<p>打开_config.yml，按照 <a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a> 的说明进行设置即可。注意把不需要的asides都删除，免得加载不必要的js，拖累访问速度。如果想把你自己的微博个人秀加在侧栏，请参考：<a href="http://clark1231.iteye.com/blog/1553939%E3%80%82">http://clark1231.iteye.com/blog/1553939%E3%80%82</a></p>

<h4>使用主题</h4>

<p>可使用 <a href="https://github.com/amelandri/darkstripes">https://github.com/amelandri/darkstripes</a> 的主题。使用方法很简单：</p>

<p><code>
$ cd octopress
$ git clone git://github.com/amelandri/darkstripes.git .themes/darkstripes
$ rake install['darkstripes']
$ rake generate
</code></p>

<p>注意你对已有主题的汉化会被覆盖，请确保提交所有更改前你merge了你的改动。</p>

<h4>添加多说</h4>

<p>由于github pages只支持静态文件，所以类似评论这样的功能就只能使用第三方工具。octopress自带disqus的评论系统，但其对国内用户不够友好，另外加载速度也不快。国内disqus的copycat是duoshuo，于是照猫画虎，添加多说的支持进来：</p>

<p>首先在 source/post/ 下创建duoshuo.html:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;!-- Duoshuo Comment BEGIN -->
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;div class="ds-thread"&gt;&lt;/div&gt;
</span><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>var duoshuoQuery = {short_name:"saick"};
</span><span class='line'>(function() {
</span><span class='line'>    var ds = document.createElement('script');
</span><span class='line'>    ds.type = 'text/javascript';ds.async = true;
</span><span class='line'>    ds.src = 'http://static.duoshuo.com/embed.js';
</span><span class='line'>    ds.charset = 'UTF-8';
</span><span class='line'>    (document.getElementsByTagName('head')[0] 
</span><span class='line'>    || document.getElementsByTagName('body')[0]).appendChild(ds);
</span><span class='line'>})();
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;!-- Duoshuo Comment END -->
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后在 source/_layouts/post.html，将对应的disqus代码改为：
注：去掉{与%中间的\</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"></pre></td><td class='code'><pre><code class=''></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在 source/_config.yml 里，添加：</p>

<p>```</p>

<h1>Duoshuo comments</h1>

<p>duoshuo_name: your_duoshuo_name
```</p>

<p>应该就可以了。可以使用如下命令测试：</p>

<p><code>
$ rake generate
$ rake preview
</code></p>

<h4>添加百度统计</h4>

<p>百度统计可以将生成的script直接添加到 source/post/after_footer.html 就可以。很简单，这里就不详述。</p>

<p>—–EOF—–</p>

<p>参考：<a href="http://www.cnblogs.com/stevelin/p/3281811.html">http://www.cnblogs.com/stevelin/p/3281811.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让Apple TV直接收看中国视频]]></title>
    <link href="http://saick.net/blog/2013/06/20/rang-apple-tvzhi-jie-shou-kan-zhong-guo-shi-pin/"/>
    <updated>2013-06-20T14:09:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/20/rang-apple-tvzhi-jie-shou-kan-zhong-guo-shi-pin</id>
    <content type="html"><![CDATA[<h4>工作原理：</h4>

<p>通过程序将视频网站的HTML转换成XML给Apple TV,于是ATV就能收看贵国视频网站了。</p>

<p>本程序给Apple tv访问的网址 : <a href="http://4.appletv3.sinaapp.com/index.php">http://4.appletv3.sinaapp.com/index.php</a>(其他设备浏览器无效)</p>

<p>此方法许多人都设想过，但是TTVast是第一位做出并共享者！由于有了TTVast的工作，我们后来者的工作就轻松许多，感谢TT!为了方便新研究的朋友，特分享我的源码，链接在页面底部。</p>

<p>TT的微博：<a href="http://weibo.com/u/1400101157">http://weibo.com/u/1400101157</a>
<a href="http://www.ottnt.com/">http://www.ottnt.com/</a> Apple TV论坛</p>

<h4>没有自己的DNS</h4>

<p>　　　只需修改Apple TV的DNS（其它网络设置默认），然后地区选择美国，
　　　即可将Apple TV内置网址指向一个新的网站，达到通过Apple TV直接收看贵国视频的愿望。
修改DNS如下：
<code>
180.153.225.136 电信服务器，适合于南方电信的用户使用。TTVast提供
210.129.145.150 适合部分联通用户，以及海外用户使用。TTVast提供
</code>
　　用私人DNS会轻易被他伪装的银行、淘宝等网站来欺骗你，为了安全，请ATV用户使用上面靠谱的。
　　请勿用于Apple TV之外的任何设备（如：手机、PC、路由器等），否则后果自负。
　　</p>

<h4>拥有自己的DNS</h4>

<p>将 <a href="http://trailers.apple.com/appletv/">http://trailers.apple.com/appletv/</a> 路径下的 index.xml 及 application.js转向下面网址的对应文件
<code>
http://180.153.225.136:8000/index.xml ttvas提供
http://210.129.145.150:8000/index.xml ttvas提供
http://4.appletv3.sinaapp.com/index.php Missde提供 - 目前测试中..
</code></p>

<p>本程序：Apple TV DNS PHP代码下载：
<a href="https://code.google.com/p/appletv/downloads/list">https://code.google.com/p/appletv/downloads/list</a></p>

<p>获取音悦台MV下载地址 <a href="http://huoqu.sinaapp.com/video/">http://huoqu.sinaapp.com/video/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Div+CSS排版]]></title>
    <link href="http://saick.net/blog/2013/06/08/web-div-plus-csspai-ban/"/>
    <updated>2013-06-08T16:08:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/08/web-div-plus-csspai-ban</id>
    <content type="html"><![CDATA[<h6>显示效果见源网页：<a href="http://www.java3z.com/cwbwebhome/article/article9/ht26.html">http://www.java3z.com/cwbwebhome/article/article9/ht26.html</a></h6>

<p>用DIV把元素定义为块对象，用CSS设置对象的格式和位置。</p>

<p>CSS+DIV的排版方式是目前应用很广的排版方式，它的使用非常灵活，可制作非常复杂的版面。以下是几种常用的CSS+DIV的排版技术。</p>

<p>纵向排列元素
<code>
用 &lt;div&gt; 标签定义块对象，由于 &lt;div&gt; 标签本身有换行作用，各元素自然排成一列。用CSS的 margin 属性设置对象间的距离，用 padding 属性调整对象的宽度和高度。
</code></p>

<p>举例：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="menu">
</span><span class='line'>&lt;div class="dd">HTML&lt;/div>
</span><span class='line'>&lt;div class="dd">CSS&lt;/div>
</span><span class='line'>&lt;div class="dd">JavaScript&lt;/div>
</span><span class='line'>&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
<code>
用 &lt;div&gt; 标签定义块对象，用CSS的 float 属性设置对象的浮动。
</code>
举例：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="box">
</span><span class='line'>&lt;div id="b1">&lt;/div>
</span><span class='line'>&lt;div id="b2">&lt;/div>
</span><span class='line'>&lt;div id="b3">&lt;/div>
</span><span class='line'>&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>用列表排列元素</p>

<p><code>
用 &lt;ul&gt; 或 &lt;ol&gt; 标签制作列表，用CSS设置列表项目的效果。这种方法主要用于规则排列的文本块、图片、控件等。
</code></p>

<p>举例：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div class="list1">
</span><span class='line'>&lt;ul>
</span><span class='line'>&lt;li>[1]&lt;/li>
</span><span class='line'>&lt;li>[2]&lt;/li>
</span><span class='line'>&lt;li>[3]&lt;/li>
</span><span class='line'>&lt;li>[4]&lt;/li>
</span><span class='line'>&lt;/ul>
</span><span class='line'>&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>[1] [2] [3] [4]
用绝对坐标定位元素</p>

<p>浏览器窗口的左上角坐标为 (0,0)，x 坐标向右，y 坐标向下。</p>

<p>CSS提供了几个位置属性，可以设置对象在页面中的位置。</p>

<p>position：当它取值为 absolute 时，表示对象使用绝对坐标定位。</p>

<p>left、top：对象的左上角坐标。</p>

<p>right、bottom：对象的右下角坐标。</p>

<p>z-index：对象的层叠顺序。取值为一个整数。</p>

<p>用绝对坐标定位的对象是可以发生重叠的，如果没有指定层叠顺序，则后定义的对象位于上层，如果指定了“z-index”值，则值大的位于上层。</p>

<p>举例：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="m1">&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="m2">&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="m3">&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我们一般不推荐使用这种方法制作网页，这种网页调整起来非常困难，只是在一些特殊情况下使用。</p>

<p>用相对坐标定位元素</p>

<p>父对象的左上角坐标为 (0,0)，对象的坐标是相对于父对象的。</p>

<p>position：当它取值为 relative 时，表示对象使用相对坐标定位。</p>

<p>left、top：对象的左上角坐标。</p>

<p>right、bottom：对象的右下角坐标。</p>

<p>以上坐标也可理解为相对于父对象的左上角偏移的距离。</p>

<p>注意：用相对坐标定位的对象不允许层叠。此时 z-index 属性无效。</p>

<p>用相对坐标定位对象在实现一些不规则的排列或拼接时有很好的效果。</p>

<p>举例：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;div id="area">
</span><span class='line'>&lt;img id="h1" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h2" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h3" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h4" src="./image/face19.gif" />
</span><span class='line'>&lt;/div>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
