<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Saick Blog]]></title>
  <link href="http://saick.net/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-08-22T15:15:48+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git no branch 解决方案]]></title>
    <link href="http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an/"/>
    <updated>2013-06-07T18:03:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>Git在使用过程中，不断的Checkout，以及各种工具使用执行各种平时不太接触的命令，最后发现push不了。 仔细检查才发现原来木有在任何branch上面开发</p>

<h5>事件经过：</h5>

<ol>
<li>正常开发，branch:master</li>
<li>在Eclipse中，使用插件checkout某版本出来</li>
<li>再checkout到最近一次提交的版本</li>
<li>不断Commit多次，一直不能push，以为工具出了问题</li>
<li>实在忍受不了就找问题，最后git branch发现 *(no branch).</li>
</ol>


<p>每次都提交，数据肯定不会丢，也没有担心。
就找个问题的解决方案，果然有。</p>

<p><a href="http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes">http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes</a>
{% codeblock %}</p>

<h1>if you have already checked out to master,</h1>

<h1>you won&rsquo;t know the commit-ish of your &ldquo;no branch&rdquo;:</h1>

<p>git fsck &mdash;lost-found # (to find your &lt;commit-ish>)
git merge &lt;commit-ish></p>

<h1>if you are still on your &ldquo;no branch&rdquo; commit:</h1>

<p>git log # (the commit-ish will be on the first line)
git checkout master
git merge &lt;commit-ish></p>

<h1>or</h1>

<p>git log | head -n 1 | cut -d &lsquo; &rsquo; -f 2 | pbcopy
git checkout master
git merge &lt;commit-ish></p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git基本使用与Dropbox配合使用]]></title>
    <link href="http://saick.net/blog/2013/05/29/gitji-ben-shi-yong-yu-dropboxpei-he-shi-yong/"/>
    <updated>2013-05-29T11:43:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/29/gitji-ben-shi-yong-yu-dropboxpei-he-shi-yong</id>
    <content type="html"><![CDATA[<h3>Git基本使用</h3>

<h4>1.取得项目的Git仓库</h4>

<h5>1.1从当前目录初始化</h5>

<p><code>
$ git init
</code></p>

<p>然后可以进行git add .. 进行文件添加。<br/>
以及编写.gitignore文件，对本地文件进行忽略</p>

<p>{% codeblock OBJ-C示例 %}</p>

<p> # Exclude the build directory
 build/*</p>

<p> # Exclude temp nibs and swap files
 <em>~.nib
 </em>.swp
 18
 # Exclude OS X folder attributes
 .DS_Store</p>

<p> # Exclude user-specific XCode 3 and 4 files
 <em>.mode1
 </em>.mode1v3
 <em>.mode2v3
 </em>.perspective
 <em>.perspectivev3
 </em>.pbxuser
 <em>.xcworkspace
 </em>.xcuserstate
 xcuserdata</p>

<p>{% endcodeblock %}</p>

<h5>1.2 从现有仓库克隆</h5>

<p><code>
git clone git://github.com/aaaa/aa.git
git clone file:::/Volumes/Data/xxx.git
git clone /Volumes/Data/xxx.git
git clone /Volumes/Data/xxx.git new_xxx_dir
</code></p>

<p>默认会创建xxx目录（xxx.git）,如果想指定目录的话用最后一种</p>

<h5>1.3 其它常用</h5>

<p><code>
git commit
git commit -a -m "asdf"
git status
git log
git log -1
git log -p
</code></p>

<p>注意看提示就好了。</p>

<h4>2.远程仓库使用</h4>

<h5>2.1 创建</h5>

<p><code>
git init --bare
</code></p>

<p>创建一个空的远程仓库（可在服务器上，也可在本地，也可以在Dropbox的目录中）</p>

<h5>2.2 查看远程仓库</h5>

<p>在本地执行以下命令
<code>
git remote -v
</code></p>

<h5>2.3 添加远程仓库</h5>

<p><code>
git remote add [shortanem] [url]
</code></p>

<h5>2.4 从远程抓取数据</h5>

<p><code>
git fetch [remote-name]
</code></p>

<h5>2.5 推送数据</h5>

<p><code>
git push [remote-name] [branchname]
</code></p>

<h5>2.6 其它</h5>

<p><code>
git remote show [remote-name]
git remote rename old new
git remote rm xxx
</code></p>

<h4>Dropbox 整合</h4>

<p>把远程建在Dropbox上即可，哈哈</p>
]]></content>
  </entry>
  
</feed>
