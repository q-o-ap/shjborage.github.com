<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 调试 | Eric's 后花园]]></title>
  <link href="http://shjborage.github.io/tags/diao-shi/atom.xml" rel="self"/>
  <link href="http://shjborage.github.io/"/>
  <updated>2018-12-02T21:00:40+08:00</updated>
  <id>http://shjborage.github.io/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    <email><![CDATA[shjborage@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS调试方法定位Crash以及静态库调试]]></title>
    <link href="http://shjborage.github.io/blog/2015/02/07/iosdiao-shi-fang-fa-ding-wei-crashyi-ji-jing-tai-ku-diao-shi/"/>
    <updated>2015-02-07T23:56:00+08:00</updated>
    <id>http://shjborage.github.io/blog/2015/02/07/iosdiao-shi-fang-fa-ding-wei-crashyi-ji-jing-tai-ku-diao-shi</id>
    <content type="html"><![CDATA[<h2>引子</h2>

<p>在iOS开发中常会遇到Crash，有时Xcode并不能很好的提示我们出错的原因是什么，具体是哪行代码出了问题。<br>
比如 <a href="http://blog.objcc.com/unrecognized-selector-sent-to-instance/">UNRECOGNIZED SELECTOR SENT TO INSTANCE 问题快速定位的方法</a> 文中提到的定位处理不了的消息发送。</p>

<h2>Symbolic Breakpoint</h2>

<p>在调试时，我们经常需要使用到断点，Xcode支持几种断点：</p>

<ul>
<li>普通断点</li>
<li>Exception Breakpoint</li>
<li>Symbolic Breakpoint</li>
<li>。。。</li>
</ul>


<p>我们可能比较熟悉普通断点，主要来介绍一下 <code>Exception Breakpoint</code> 和 <code>Symbolic Breakpoint</code>.</p>

<p><strong><em>Exception Breakpoint</em></strong><br>
全局异常断点，傻瓜式的使用，在任意的代码处有异常抛出没有捕获即可“被断住”。<br>
<em>注：如果使用了C、C++开发的话，有些signal可能会被这种断点触发，但并不会引发Crash</em></p>

<p><strong><em>Symbolic Breakpoint</em></strong><br>
通过类名以及方法名来添加断点的一种方式。例如：
<code>
-[NSObject(NSObject) doesNotRecognizeSelector:]
</code></p>

<h3>包含静态库的整体调试</h3>

<p>如果想测试在某个静态库中某个方法是否执行，可以在知道类名跟方法名的情况下使用 <code>Symbolic Breakpoint</code> 来确认这个情况</p>

<h4>送个命令～</h4>

<p>可以在某个静态库或可执行文件中查找 symbol。 需要详细的使用方法，请自行<code>man nm</code>
<code>
// nm - display name list (symbol table)
nm xxx.a | grep xxSymbol
</code></p>
]]></content>
  </entry>
  
</feed>
