<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: basic | Eric's 后花园]]></title>
  <link href="http://shjborage.github.io/tags/basic/atom.xml" rel="self"/>
  <link href="http://shjborage.github.io/"/>
  <updated>2018-12-02T21:05:29+08:00</updated>
  <id>http://shjborage.github.io/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    <email><![CDATA[shjborage@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python时间,日期,时间戳处理]]></title>
    <link href="http://shjborage.github.io/blog/2014/08/14/pythonshi-jian-ri-qi-shi-jian-chuo-chu-li/"/>
    <updated>2014-08-14T21:28:00+08:00</updated>
    <id>http://shjborage.github.io/blog/2014/08/14/pythonshi-jian-ri-qi-shi-jian-chuo-chu-li</id>
    <content type="html"><![CDATA[<p>最近在练习<code>python</code>，看书看到好多东西，不过需要用的时候还会想不起来，还是万能的<code>Google</code>牛啊，从<code>Google</code>学习咯~</p>

<h4>1.将字符串的时间转换为时间戳</h4>

<p>方法:
```</p>

<pre><code>a = "2013-10-10 23:40:00"
# 将其转换为时间数组
import time
timeArray = time.strptime(a, "%Y-%m-%d %H:%M:%S")
# 转换为时间戳:
timeStamp = int(time.mktime(timeArray))
timeStamp == 1381419600
</code></pre>

<p>```</p>

<h4>2.字符串格式更改</h4>

<p>如a = &ldquo;2013-10-10 23:40:00&rdquo;,想改为 a = &ldquo;2013/10/10 23:40:00&rdquo;<br>方法:先转换为时间数组,然后转换为其他格式
```</p>

<pre><code>timeArray = time.strptime(a, "%Y-%m-%d %H:%M:%S")
otherStyleTime = time.strftime("%Y/%m/%d %H:%M:%S", timeArray)
</code></pre>

<p>```</p>

<h4>3.时间戳转换为指定格式日期:</h4>

<p>方法一:<br>
利用localtime()转换为时间数组,然后格式化为需要的格式,如
```</p>

<pre><code>timeStamp = 1381419600
timeArray = time.localtime(timeStamp)
otherStyleTime = time.strftime("%Y-%m-%d %H:%M:%S", timeArray)
otherStyletime == "2013-10-10 23:40:00"
</code></pre>

<p>```</p>

<!-- more -->


<p>方法二:
```</p>

<pre><code>import datetime
timeStamp = 1381419600
dateArray = datetime.datetime.utcfromtimestamp(timeStamp)
otherStyleTime = dateArray.strftime("%Y-%m-%d %H:%M:%S")
otherStyletime == "2013-10-10 23:40:00"
</code></pre>

<p>```</p>

<h4>4.获取当前时间并转换为指定日期格式</h4>

<p>方法一:
```</p>

<pre><code>import time
# 获得当前时间时间戳
now = int(time.time())  -&gt;这是时间戳
# 转换为其他日期格式,如:"%Y-%m-%d %H:%M:%S"
timeArray = time.localtime(timeStamp)
otherStyleTime = time.strftime("%Y-%m-%d %H:%M:%S", timeArray)
</code></pre>

<p>```</p>

<p>方法二:
```</p>

<pre><code>import datetime
# 获得当前时间
now = datetime.datetime.now()  # 这是时间数组格式
# 转换为指定的格式:
otherStyleTime = now.strftime("%Y-%m-%d %H:%M:%S")
</code></pre>

<p>```</p>

<h4>5.获得三天前的时间</h4>

<p>方法:
```</p>

<pre><code>import time
import datetime
# 先获得时间数组格式的日期
threeDayAgo = (datetime.datetime.now() - datetime.timedelta(days = 3))
# 转换为时间戳:
timeStamp = int(time.mktime(threeDayAgo.timetuple()))
# 转换为其他字符串格式:
otherStyleTime = threeDayAgo.strftime("%Y-%m-%d %H:%M:%S")
</code></pre>

<p>```
<em>注:timedelta()的参数有:days,hours,seconds,microseconds</em></p>

<h4>6.给定时间戳,计算该时间的几天前时间:</h4>

<p>```</p>

<pre><code>timeStamp = 1381419600
# 先转换为datetime
import datetime
import time
dateArray = datetime.datetime.utcfromtimestamp(timeStamp)
threeDayAgo = dateArray - datetime.timedelta(days = 3)
# 参考5,可以转换为其他的任意格式了
</code></pre>

<p>```</p>

<p>原文：清风乐逍遥<a href="http://blog.csdn.net/xiaobing_blog/article/details/12591917">http://blog.csdn.net/xiaobing_blog/article/details/12591917</a></p>
]]></content>
  </entry>
  
</feed>
