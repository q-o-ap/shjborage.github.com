<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Saick Blog]]></title>
  <link href="http://saick.net/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-05-28T17:18:42+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flashlight(PowerSaving) 简介]]></title>
    <link href="http://saick.net/blog/2013/05/28/flashlight-powersaving-jian-jie/"/>
    <updated>2013-05-28T16:46:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/flashlight-powersaving-jian-jie</id>
    <content type="html"><![CDATA[<h1>PowerSaving Flashlight </h1>

<p>The best flashlight app to save you power and then protect you battery.</p>

<p>Do you encounter such a situation: When you using the flashlight to show something, the iPhone is locked.
PowerSaving Flashlight also solve this issue.</p>

<p>Details:
1.Saving you battery power automatic, and you can change it from settings(both in app setting and system setting)
2.Stop using you torch when battery level is low
3.Disable the system Auto-Lock
4.Turn on the flashlight when app startup(You can set it to &ldquo;NO&rdquo;
5.Fullscreen control, but you can only turn it off by press the button.
6.Share the famous app to you friends.</p>

<p>No matter what problem you have, just contact us by email or visit the develop&rsquo;s blog.</p>

<p>史上最懂你的省电手电筒</p>

<p>还在为找不到好用的手电筒发愁么？
还在为那些“大而全”的工具启动慢、难用发愁么？
还在为手电筒用着用着就黑了发愁么？
还在为手电筒用着太费电发愁么？</p>

<ol>
<li>自动为你的手机省电</li>
<li>当电池电量过低，自动切换到“白屏”模式</li>
<li>可选择禁用系统锁屏功能</li>
<li>启动可选择默认打开手电筒</li>
<li>全屏控制功能，按任意位置打开，关闭按开关</li>
<li>分享手电筒给好友</li>
</ol>


<p>如果您遇到问题或者有好的建议，请直接与我们联系或者在程序中提交反馈，谢谢。</p>

<p>无奈AppStore不让上，做的再好都不让上，哎！</p>

<h4>91：</h4>

<p><a href="http://app.91.com/Soft/Detail.aspx?Platform=iPhone&amp;f_id=1577788">http://app.91.com/Soft/Detail.aspx?Platform=iPhone&amp;f_id=1577788</a></p>

<h4>同步推：</h4>

<p><a href="http://app.tongbu.com/10001483_flashlight.html">http://app.tongbu.com/10001483_flashlight.html</a></p>

<h5>欢迎留言反馈！</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iSecret 简介]]></title>
    <link href="http://saick.net/blog/2013/05/28/isecret-jian-jie/"/>
    <updated>2013-05-28T16:44:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/isecret-jian-jie</id>
    <content type="html"><![CDATA[<h1>iSecret</h1>

<p>美国区：<a href="https://itunes.apple.com/us/app/isecret-ai-mi-mi/id502265634?mt=8&uo=4" target="itunes_store"><img src="http://r.mzstatic.com/images/web/linkmaker/badge_appstore-lrg.gif" alt="iSecret（爱秘密） - Safe&Quick" style="border: 0;"/></a></p>

<p>中国区：<a href="https://itunes.apple.com/cn/app/isecret-ai-mi-mi/id502265634?mt=8&uo=4" target="itunes_store"><img src="http://r.mzstatic.com/images/web/linkmaker/badge_appstore-lrg.gif" alt="iSecret（爱秘密） - Safe&Quick" style="border: 0;"/></a></p>

<p>iSecret is a program that save and manage your accounts and passwords.
Now, everyone have many accounts and password, hard to remember them.
So, iSecret could help you to manage them safely.
iSecret&rsquo;s all file are encrypted at high level.
iSecret does not require any network.</p>

<p>Thanks for you support. No matter what problem, just mail to <a href="&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#115;&#x68;&#106;&#x62;&#111;&#x72;&#x61;&#x67;&#101;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;">&#115;&#104;&#x6a;&#98;&#111;&#x72;&#97;&#103;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>

<p>i秘密使用主密码加密,用来保存各种网站、微博、QQ、飞信等的密码信息。
现如今,密码太多,全部用同样的却不安全,用不一样的却很容易自己都不知道密码是什么。
所以i秘密帮您把这些帐号密码保管起来,并且全程高强度加密,确保信息安全。
为了保证密码的安全,首先主密码是通过高强度的加密算法,保存到手机当中。
即可手机被破解,也能保证数据的安全。
对于保存的各类网站等的密码信息,全部通过加密文本保存到手机中,并且是全部纯文本解析,没有用
任何XML、INI等配置文件,让安全性更升一级。
i秘密不需要任何的网络访问,进一步加强安全性。</p>

<p>欢迎大家<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x73;&#104;&#106;&#x62;&#111;&#114;&#x61;&#x67;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;&#xe6;&#x8f;&#144;&#xe5;&#x87;&#xba;&#xe5;&#xae;&#157;&#232;&#180;&#xb5;&#xe6;&#x84;&#x8f;&#232;&#xa7;&#129;&#x2c;&#229;&#133;&#xb1;&#xe5;&#x90;&#x8c;&#xe4;&#xb8;&#xba;&#xe5;&#xa5;&#189;&#xe4;&#186;&#167;&#229;&#x93;&#129;&#232;&#x80;&#140;&#229;&#x8a;&#xaa;&#xe5;&#138;&#x9b;&#xe3;&#x80;&#x82;">&#115;&#104;&#x6a;&#x62;&#x6f;&#x72;&#97;&#103;&#101;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;&#xe6;&#143;&#144;&#xe5;&#135;&#186;&#229;&#174;&#x9d;&#xe8;&#180;&#181;&#xe6;&#132;&#x8f;&#xe8;&#xa7;&#129;&#x2c;&#xe5;&#133;&#xb1;&#229;&#144;&#140;&#xe4;&#184;&#186;&#229;&#xa5;&#189;&#xe4;&#186;&#xa7;&#229;&#147;&#x81;&#232;&#128;&#140;&#xe5;&#138;&#170;&#229;&#138;&#x9b;&#xe3;&#x80;&#130;</a></p>

<h3>Release Note:</h3>

<h5>v1.0  2012-02-22 10:08:28</h5>

<ul>
<li>第一版本，仅157kb大小。</li>
<li>功能简单实用</li>
</ul>


<h5>v1.1  2012-08-15 10:16:20</h5>

<ul>
<li>在查看秘密时，可直接点击文本内容将其拷贝到剪贴板；</li>
<li>应用需要输入密码时，如果您输入正确的密码，自动进入；</li>
<li>当您添加新的秘密时，自动进入编辑模式；</li>
<li>当您发送邮件时，加入一些提示信息；</li>
<li>添加开发者博客以及用户评价体系；</li>
<li><p>其它问题修复。</p></li>
<li><p>In secret detail view, you can tap some text information to copy it to pasteboard;</p></li>
<li>In the beginning of the app, when you enter the correct password, it will start working automatically;</li>
<li>When you add new secret, edit it first;</li>
<li>Add some presentations when you send emails;</li>
<li>Add author&rsquo;s blog and user review interface;</li>
<li>Some other bugs fixed.</li>
</ul>


<h5>v1.2  2012-09-24 14:58:31</h5>

<ul>
<li><p>随iPhone5同步上，适配iOS6 iPhone5 4寸 1136*640的分辨率</p></li>
<li><p>Adapter iOS6 iPhone5 4-inch 1136 * 640 resolution</p></li>
</ul>


<h5>v1.3  2013-04-25 10:55:45</h5>

<ul>
<li>支持图形解锁以及简单数字密码，更加简单方便</li>
<li>简化用户反馈功能，支持内部反馈</li>
<li>加入程序版更新提示本</li>
<li>解决各个版本系统上面UI细节问题</li>
<li>推荐应用给好友圈</li>
<li><p>禁用程序后台运行，更加安全稳定</p></li>
<li><p>Support simple password and pattern, which is easy to use</p></li>
<li>Simply the user feedback in the app without go to the AppStore</li>
<li>Add new version prompt, you can&rsquo;t miss the new version</li>
<li>Fix some bugs in the different iOS versions</li>
<li>Share this app to your friends</li>
<li>Stop running in the background, much safer</li>
</ul>


<h5>v1.4  2013-05-23 7:55:45</h5>

<ul>
<li>加强主密码安全性，强烈建议大家升级</li>
<li><p>默认密码不显示的问题</p></li>
<li><p>Improve the security of you main passcode, recommend you to update at once.</p></li>
<li>Fix bug: the default passcode was not show.</li>
</ul>


<h3>欢迎留言反馈！</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Property 使用注意事项]]></title>
    <link href="http://saick.net/blog/2013/05/28/propertyshi-yong-zhu-yi-shi-xiang/"/>
    <updated>2013-05-28T11:04:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/propertyshi-yong-zhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<ul>
<li>NSString property的属性必须是copy</li>
<li>delegate property的属性是assign</li>
<li>dealloc 时，如果有delegate，要把delegate置成nilj,避免收到消息等</li>
<li>init 和dealloc中不要用self.XX=;</li>
</ul>


<h4>NSCoping</h4>

<p>Any object that you wish to set for a copy property must support NSCopying, which means that it should conform to the NSCopying protocol.</p>

<p>If you need to set a copy property’s instance variable directly, for example in an initializer method, don’t forget to set a copy of the original object:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (id)initWithSomeOriginalString:(NSString *)aString {
</span><span class='line'>    self = [super init];
</span><span class='line'>    if (self) {
</span><span class='line'>        _instanceVariableForCopyProperty = [aString copy];
</span><span class='line'>    }
</span><span class='line'>    return self;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Category 巧用-调试程序]]></title>
    <link href="http://saick.net/blog/2013/05/28/category-qiao-yong-diao-shi-cheng-xu/"/>
    <updated>2013-05-28T10:52:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/category-qiao-yong-diao-shi-cheng-xu</id>
    <content type="html"><![CDATA[<h3>Category可以用来调试</h3>

<p>除了隐藏私有方法外，我主要用它截住函数。</p>

<p>例1：测试时我想知道TableViewCell有没有释放，就可以这样写</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@implementation UITableViewCell(dealloc) 
</span><span class='line'>-(void)dealloc 
</span><span class='line'>{ 
</span><span class='line'>   NSLog(@"%@",NSStringFromSelector(_cmd)); 
</span><span class='line'>    NSArray *array = allSubviews(self);       // allSubviews是cookBook里的函数，可以取一个view的所有subView ,在这个文档后面也有
</span><span class='line'>    NSLog(@"%@",array); 
</span><span class='line'>    [super dealloc]; 
</span><span class='line'>}
</span><span class='line'>@end </span></code></pre></td></tr></table></div></figure>


<p>其它的类也可以这样写，你随便输出什么</p>

<p>例2：我调试程序，觉得table的大小变了，想找到在哪改变的，这样做：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> @implementation UITableView(setframe) 
</span><span class='line'>-(void)setFrame:(CGRect)frame 
</span><span class='line'>{ 
</span><span class='line'>   NSLog(%"%@",self); 
</span><span class='line'>    [super setFrame: frame]; 
</span><span class='line'>} 
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 开发常见低级错误]]></title>
    <link href="http://saick.net/blog/2013/05/28/ios-kai-fa-chang-jian-di-ji-cuo-wu/"/>
    <updated>2013-05-28T10:19:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/ios-kai-fa-chang-jian-di-ji-cuo-wu</id>
    <content type="html"><![CDATA[<p><strong><em>不断更新中。。。</em></strong></p>

<p>May 28, 2013</p>

<ul>
<li><h3>不要调用[super  release]</h3>

<p>在dealloc里要调用[super dealloc]，千万不要调用[super release]</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS block 编程]]></title>
    <link href="http://saick.net/blog/2013/05/28/ios-block-bian-cheng/"/>
    <updated>2013-05-28T09:57:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/28/ios-block-bian-cheng</id>
    <content type="html"><![CDATA[<h2>block</h2>

<p>Blocks are often used to simplify common tasks such as collection enumeration, sorting and testing. They also make it easy to schedule tasks for concurrent or asynchronous execution using technologies like Grand Central Dispatch (GCD).</p>

<h4>声明block：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void (^simpleBlock)(void);</span></code></pre></td></tr></table></div></figure>


<h4>定义block：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>simpleBlock = ^{
</span><span class='line'>        NSLog(@"This is a block");
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>声明和定义在一起：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void (^simpleBlock)(void) = ^{
</span><span class='line'>    NSLog(@"This is a block");
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<h4>调用block：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>simpleBlock();</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>带返回值和参数的block:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>double (^multiplyTwoValues)(double, double) =
</span><span class='line'>                              ^(double firstValue, double secondValue) {
</span><span class='line'>                                  return firstValue * secondValue;
</span><span class='line'>                              };
</span><span class='line'>    double result = multiplyTwoValues(2,4);
</span><span class='line'>    NSLog(@"The result is %f", result);</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>If you need to be able to change the value of a captured variable from within a block, you can use the __block storage type modifier on the original variable declaration.</p>

<h4>如果block是递归调用的，必须设置成 __block。e.g.</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>__block int (^recursiveBlock)(int) = ^(int param) {
</span><span class='line'>      if (param == 1) {
</span><span class='line'>          return 1;
</span><span class='line'>      }
</span><span class='line'>      return (param--) * recursiveBlock(param);
</span><span class='line'>};  
</span><span class='line'>recursiveBlock(5);    // 计算5的阶乘</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>You Can Pass Blocks as Arguments to Methods or Functions
&ndash; (void)beginTaskWithCallbackBlock:(void (^)(void))callbackBlock;
The (void (^)(void)) specifies that the parameter is a block that doesn’t take any arguments or return any values. The implementation of the method can invoke the block in the usual way:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)beginTaskWithCallbackBlock:(void (^)(void))callbackBlock {
</span><span class='line'>    ...
</span><span class='line'>    callbackBlock();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>A Block Should Always Be the Last Argument to a Method
Objects Use Properties to Keep Track of Blocks
The syntax to define a property to keep track of a block is similar to a block variable:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@interface XYZObject : NSObject
</span><span class='line'>@property (copy) void (^blockProperty)(void);
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Note: You should specify copy as the property attribute, because a block needs to be copied to keep track of its captured state outside of the original scope.
A block property is set or invoked like any other block variable:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>self.blockProperty = ^{
</span><span class='line'>    ...
</span><span class='line'>};
</span><span class='line'>self.blockProperty();
</span><span class='line'>typedef void(^BlockCC)(void);</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>// e.g.更新myTableview并显示最后一行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if (dataArray.count &gt; 0) {
</span><span class='line'>      [myTableView reloadData];   
</span><span class='line'>      // reloadData后不能直接调用scrollToRowAtIndexPath，有可能lastIndex在table中不存在，
</span><span class='line'>   // 所以要[NSObject performBlock: afterDelay:0];
</span><span class='line'>      [myTableView retain];   // 防止关闭视图，myTableView释放之后scrollToBottom出错
</span><span class='line'>      NSIndexPath *lastIndex = [NSIndexPath indexPathForRow:dataArray.count-1 inSection:0];
</span><span class='line'>      void (^scrollToBottom)(void) = ^{
</span><span class='line'>          [myTableView scrollToRowAtIndexPath:lastIndex atScrollPosition:UITableViewScrollPositionBottom animated:YES];
</span><span class='line'>          [myTableView release];
</span><span class='line'>      };
</span><span class='line'>      //
</span><span class='line'>      [NSObject performBlock:scrollToBottom afterDelay:0];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test sharing code snippets]]></title>
    <link href="http://saick.net/blog/2013/05/27/test-sharing-code-snippets/"/>
    <updated>2013-05-27T16:54:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/27/test-sharing-code-snippets</id>
    <content type="html"><![CDATA[<p>Sharing Code Snippets</p>

<p><em>Backtick Code Blocks</em></p>

<p>Syntax:(insert enter before and after the two &#8220;&#8220;&#8220;)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>``` [language] [title] [url] [link text]
</span><span class='line'>code snippet ```
</span></code></pre></td></tr></table></div></figure>


<p><strong>Example(plain):</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>``` $ sudo make me a sandwich ```
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo make me a sandwich</span></code></pre></td></tr></table></div></figure>


<p>Example With Syntax Highlighting a Caption and Link</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>```ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ Source Article
</span><span class='line'>class Fixnum
</span><span class='line'>  def prime?
</span><span class='line'>    ('1' * self) !~ /^1?$|^(11+?)\1+$/
</span><span class='line'>  end
</span><span class='line'>end```</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>More:
<a href="http://octopress.org/docs/blogging/code/">http://octopress.org/docs/blogging/code/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello jekyll]]></title>
    <link href="http://saick.net/blog/2013/05/27/hello-jekyll/"/>
    <updated>2013-05-27T16:32:00+08:00</updated>
    <id>http://saick.net/blog/2013/05/27/hello-jekyll</id>
    <content type="html"><![CDATA[<p>测试一下这玩意是不是能发布成功，哈哈</p>
]]></content>
  </entry>
  
</feed>
