<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Saick Blog]]></title>
  <link href="http://saick.net/atom.xml" rel="self"/>
  <link href="http://saick.net/"/>
  <updated>2013-10-11T00:15:21+08:00</updated>
  <id>http://saick.net/</id>
  <author>
    <name><![CDATA[Eric Shi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 5 : UIImage and resizableImageWithCapInsets]]></title>
    <link href="http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets/"/>
    <updated>2013-10-10T23:41:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/ios-5-uiimage-and-resizableimagewithcapinsets</id>
    <content type="html"><![CDATA[<p>I recently began writing a short example to learn more about the iOS 5 Appearance API and customizing UINavigationBar objects. The goal was to add a custom background, title and text to the navbar. Once I had this working, to keep a consist look across my application, I began tweaking the buttons on the navbar using the same Appearance API.
As I got further into the customization of the buttons, I ran into a method withinUIImage that was introduced in iOS 5, resizableImageWithCapInsets. I found myself getting side-tracked from the original idea of navbar look and feel, to understanding how cap insets work. This post delves into what I learned.</p>

<p>Cap Insets with UIButton
As the documentation describes, you use resizableImageWithCapInsets to add cap insets to an image, when the image is resized or scaled, cap areas are not affected. The best way to understand this is through an example.
Let’s assume I want all the buttons on my UI to have a similar look, a gradient with a white border. Below is the image used for the examples in this post (the button is shown on a gray backdrop so you can see the white border):</p>

<p><img src="http://www.saick.net/images/blog/2013-10-10-1.png"></p>

<p>Depending on the context of where the button appears, its size may vary. The code to create a button with the image and the corresponding output follow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(80, 130, 160, 44)];  
</span><span class='line'>[button setTitle:@"Test Button" forState:UIControlStateNormal]; 
</span><span class='line'>
</span><span class='line'>// Image with without cap insets
</span><span class='line'>UIImage *buttonImage = [UIImage imageNamed:@"blueButton"];   
</span><span class='line'>
</span><span class='line'>[button addTarget:self action:@selector(buttonPressed:) forControlEvents: UIControlEventTouchUpInside];
</span><span class='line'>[button setBackgroundImage:buttonImage forState:UIControlStateNormal];
</span><span class='line'>[[self view] addSubview:button];</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.saick.net/images/blog/2013-10-10-2.png"></p>

<p>As you can see, the button is stretched in all directions. Let’s change the code to include cap insets, however, before we do that, let’s look at the signature of the cap insets method:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets</span></code></pre></td></tr></table></div></figure>


<p>Looking on step further, UIEdgeInserts is defined as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef struct {  
</span><span class='line'>   CGFloat top, left, bottom, right;
</span><span class='line'>} UIEdgeInsets;</span></code></pre></td></tr></table></div></figure>


<p>UIEdgeInsets is structure that specifies float values for each cap inset: top, left, bottom and right areas of an image. To apply this to the image for the button, here is all we need to do:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Image with cap insets
</span><span class='line'>UIImage *buttonImage = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(0, 16, 0, 16)];</span></code></pre></td></tr></table></div></figure>


<p>This requests that the left and right 16 pixels of the original image are not scaled or resized when stretching the image to accomodate the button size frame defined above. The end results is as shown below:</p>

<p><img src="http://www.saick.net/images/blog/2013-10-10-3.png"></p>

<p>Cap Insets with UIBarButtonItem
We can use the same image for a button on a navbar (I’ll show the specifics in the next post on customizing the navbar). Without specifying the cap insets, the button looks as follows:</p>

<p><img src="http://www.saick.net/images/blog/2013-10-10-4.png"></p>

<p>The code below specifies an image where 12 pixels on the top, left, bottom and right be preserved when stretching/resizing the button:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UIImage *backButton = [[UIImage imageNamed:@"blueButton"]     resizableImageWithCapInsets:UIEdgeInsetsMake(12, 12, 12, 12)];</span></code></pre></td></tr></table></div></figure>


<p>The output nows looks as follows:</p>

<p><img src="http://www.saick.net/images/blog/2013-10-10-5.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遭遇SIGPIPE]]></title>
    <link href="http://saick.net/blog/2013/10/10/zao-yu-sigpipe/"/>
    <updated>2013-10-10T23:35:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/zao-yu-sigpipe</id>
    <content type="html"><![CDATA[<p>《转》</p>

<p>我写了一个服务器程序, 在Windows下在cygwin环境编译后执行,
然后用C#写了多线程客户端进行压力测试. 程序一直运行正常.
但当在Linux下测试时, 总是莫名退出. 最后跟踪到是write调用导致退出.</p>

<p>用gdb执行程序, 退出时提示&#8221;Broken pipe&#8221;.
最后问题确定为, 对一个对端已经关闭的socket调用两次write,
第二次将会生成SIGPIPE信号, 该信号默认结束进程.
具体的分析可以结合TCP的&#8221;四次握手&#8221;关闭. TCP是全双工的信道,
可以看作两条单工信道, TCP连接两端的两个端点各负责一条. 当对端调用close时,
虽然本意是关闭整个两条信道, 但本端只是收到FIN包. 按照TCP协议的语义,
表示对端只是关闭了其所负责的那一条单工信道, 仍然可以继续接收数据.</p>

<p>也就是说, 因为TCP协议的限制,
一个端点无法获知对端的socket是调用了close还是shutdown.
对一个已经收到FIN包的socket调用read方法, 如果接收缓冲已空, 则返回0,
这就是常说的表示连接关闭. 但第一次对其调用write方法时, 如果发送缓冲没问题,
会返回正确写入(发送). 但发送的报文会导致对端发送RST报文,
因为对端的socket已经调用了close, 完全关闭, 既不发送, 也不接收数据. 所以,
第二次调用write方法(假设在收到RST之后), 会生成SIGPIPE信号, 导致进程退出.</p>

<p>为了避免进程退出, 可以捕获SIGPIPE信号, 或者忽略它,
给它设置SIG_IGN信号处理函数:
<code>signal(SIGPIPE, SIG_IGN);</code>
这样, 第二次调用write方法时, 会返回-1, 同时errno置为SIGPIPE.
程序便能知道对端已经关闭.</p>

<p>PS: Linux下的SIGALRM似乎会每1秒钟往后偏移1毫秒, 但Windows下经过测试完全准时, 不差1毫秒.</p>

<h5>忽略SIGPIPE信号的方法</h5>

<p><a href="http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html">http://hi.baidu.com/greathongjian/blog/item/2f695643091885139213c65a.html</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct sigaction sa;
</span><span class='line'>sa.sa_handler = SIG_IGN;//设定接受到指定信号后的动作为忽略
</span><span class='line'>sa.sa_flags = 0;
</span><span class='line'>if (sigemptyset(&sa.sa_mask) == -1 || //初始化信号集为空
</span><span class='line'>sigaction(SIGPIPE, &sa, 0) == -1) { //屏蔽SIGPIPE信号
</span><span class='line'>perror("failed to ignore SIGPIPE; sigaction");
</span><span class='line'>exit(EXIT_FAILURE);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h5>pthread线程里如何屏蔽SIGPIPE异常</h5>

<p>hi.baidu.com/ailacy/blog/item/a7eb65f8b8b55707d8f9fdd5.html
<a href="http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1">http://bbs2.chinaunix.net/viewthread.php?tid=985166&amp;extra=&amp;page=1</a></p>

<p>在pthread中，可能会遇到Program received signal SIGPIPE, Broken
pipe的问题，解决方法是每一个线程启动之前时，先执行下面代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#ifndef WIN32
</span><span class='line'>sigset_t signal_mask;
</span><span class='line'>sigemptyset (&signal_mask);
</span><span class='line'>sigaddset (&signal_mask, SIGPIPE);
</span><span class='line'>int rc = pthread_sigmask (SIG_BLOCK, &signal_mask, NULL);
</span><span class='line'>if (rc != 0) {
</span><span class='line'>printf("block sigpipe error\n");
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NaN问题 Not a Number]]></title>
    <link href="http://saick.net/blog/2013/10/10/nanwen-ti-not-a-number/"/>
    <updated>2013-10-10T23:26:00+08:00</updated>
    <id>http://saick.net/blog/2013/10/10/nanwen-ti-not-a-number</id>
    <content type="html"><![CDATA[<p>这种错误是在float经过函数运行出了不是数字的值，nan的意思就是not a number。</p>

<p>主要常见原因：</p>

<ul>
<li>除以0</li>
<li>sizeWithFont的字符串为nil</li>
<li>数学函数不正确运算</li>
</ul>


<p>解决方法除了排除根源所在之外，用函数isnan()也是不错的选择（至少在没有彻底解决以前）
如下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>float _x = NAN;
</span><span class='line'>if (!isnan(_x)) {
</span><span class='line'>cell.imgView.frame = CGRectMake(_x, 8, 10, 12);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>引自：<a href="http://www.minroad.com/?p=403">http://www.minroad.com/?p=403</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[group_concat函数详解]]></title>
    <link href="http://saick.net/blog/2013/09/24/group-concathan-shu-xiang-jie/"/>
    <updated>2013-09-24T00:06:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/24/group-concathan-shu-xiang-jie</id>
    <content type="html"><![CDATA[<p>问了好多人，都不知道group_concat这个函数。
这个函数好啊，能将相同的行组合起来，省老事了。
MySQL中group_concat函数(SQLite或其它数据亦可)</p>

<p>完整的语法如下：</p>

<p>group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator &lsquo;分隔符&rsquo;])</p>

<h4>基本查询</h4>

<p>Sql代码</p>

<ol>
<li> select * from aa;</li>
</ol>


<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+</p>

<p>| id| name |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+</p>

<p>|1 | 10|</p>

<p>|1 | 20|</p>

<p>|1 | 20|</p>

<p>|2 | 20|</p>

<p>|3 | 200 |</p>

<p>|3 | 500 |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+</p>

<p>6 rows in set (0.00 sec)</p>

<p>以id分组，把name字段的值打印在一行，逗号分隔(默认)</p>

<p>Sql代码</p>

<ol>
<li> select id,group_concat(name) from aa group by id;</li>
</ol>


<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>| id| group_concat(name) |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>|1 | 10,20,20|</p>

<p>|2 | 20 |</p>

<p>|3 | 200,500|</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>3 rows in set (0.00 sec)</p>

<p>以id分组，把name字段的值打印在一行，分号分隔</p>

<p>Sql代码</p>

<ol>
<li> select id,group_concat(name separator &lsquo;;&rsquo;) from aa group by id;</li>
</ol>


<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>| id| group_concat(name separator &lsquo;;&rsquo;) |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>|1 | 10;20;20 |</p>

<p>|2 | 20|</p>

<p>|3 | 200;500 |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>3 rows in set (0.00 sec)</p>

<p>以id分组，把去冗余的name字段的值打印在一行，</p>

<h3>逗号分隔</h3>

<p>Sql代码</p>

<ol>
<li> select id,group_concat(distinct name) from aa group by id;</li>
</ol>


<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>| id| group_concat(distinct name) |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>|1 | 10,20|</p>

<p>|2 | 20 |</p>

<p>|3 | 200,500 |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>3 rows in set (0.00 sec)</p>

<p>以id分组，把name字段的值打印在一行，逗号分隔，以name排倒序</p>

<p>Sql代码</p>

<ol>
<li> select id,group_concat(name order by name desc) from aa group by id;</li>
</ol>


<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>| id| group_concat(name order by name desc) |</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>|1 | 20,20,10 |</p>

<p>|2 | 20|</p>

<p>|3 | 500,200|</p>

<p>+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>3 rows in set (0.00 sec)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode工程目录的 folder 和 group的区别(蓝色和黄色文件夹的区别)]]></title>
    <link href="http://saick.net/blog/2013/09/23/xcodegong-cheng-mu-lu-de-folder-he-groupde-qu-bie-lan-se-he-huang-se-wen-jian-jia-de-qu-bie/"/>
    <updated>2013-09-23T23:58:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/23/xcodegong-cheng-mu-lu-de-folder-he-groupde-qu-bie-lan-se-he-huang-se-wen-jian-jia-de-qu-bie</id>
    <content type="html"><![CDATA[<p>XCode工程目录里面，有时你会发现2个不同颜色的文件夹，一种是蓝色的，一种是黄色的，最常见的是黄色的，我也是最近学习html5的时候，发现还有蓝色的文件夹呢，
来上图看下吧</p>

<p><img src="http://www.saick.net/images/blog/2013-09-23-1.png"></p>

<p> 上图所示，蓝色的是folder 黄色的是group。 那么它们有什么区别呢？
1. group 和 folder的区别
group 一般只在你的工程中是文件夹的形式，但是在本地的目录中还是以散乱的形式放在一起的，除非你是从外部以group的形式引用进来的。
folder 只能作为资源，整个引用进项目，不能编译代码，也就是说，以folder形式引用进来的文件，不能被放在complie sources列表里面。
2. 以folder的形式引用文件
我拖动外部的文件夹 WebViewJavascriptBridge 到我的xcode工程目录下面
会弹出对话框，如图</p>

<p><img src="http://www.saick.net/images/blog/2013-09-23-2.png"></p>

<p>copy，是指文件不在项目的目录下面，例如项目在桌面上，文件在 Download 下，你 copy 就会被复制到项目里面。如果文件原本就在项目里面，则不执行任何操作。这里不管它，重点是 下面的单选框。
这里我选择的是以folder的形式引用文件夹，点击完成，如下图所示，文件夹是蓝色的，并且编译文件列表里面没有 webviewjavascriptBridge.m这个文件，证明文件夹引用，只会引用文件夹，文件夹里面的东西都会直接拷贝到 bundle 包，不参与编译。</p>

<p><img src="http://www.saick.net/images/blog/2013-09-23-3.png"></p>

<ol>
<li>以group的形式引用文件
回到1的第一步，选中 create groups for any added folders ，点击完成，则如下图所示，文件夹是黄色的，并且编译文件列表里面神奇的存在了 webviewjavascriptBridge.m这个文件</li>
</ol>


<p><img src="http://www.saick.net/images/blog/2013-09-23-4.png"></p>

<p>现在，终于明白了 folder和 group的区别了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用unit test，资源获取注意事项]]></title>
    <link href="http://saick.net/blog/2013/09/23/shi-yong-unit-test%2Czi-yuan-huo-qu-zhu-yi-shi-xiang/"/>
    <updated>2013-09-23T23:42:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/23/shi-yong-unit-test,zi-yuan-huo-qu-zhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<h3>引言</h3>

<p> 使用XCode4.5 下使用unit test时，发现直接使用
 <code>
 UIImage *imgA = [UIImage imageNamed:@"asdf"];
 NSString *resourcePath = [[NSBundle mainBundle] pathForResource:@”xxx.json”ofType:nil];
</code>
 得不到资源，调查一下原来是这样，怪不得人们写代码不想用imageNamed呢。</p>

<h3>一、基础知识</h3>

<h4>1，官方教程</h4>

<p>　　单元测试包含“逻辑测试”和“应用测试”两种类型，分别对应不同的配置方式：
　　逻辑测试(Logic Unit Test):测试跟App运行过程无关的纯逻辑代码，比如随机数算法，数据结构一类的。
　　应用测试(Application Unit test):测试跟App运行环境相关的代码，比如目录、文件操作，Core Data存取等。
　　在Xcode4.5中，创建App时会自动创建Application Unit Test项目。</p>

<h4>2，示例代码。</h4>

<p>　　在Xcode documentation中，可以找到“iPhoneUnitTests”这个例子项目。这个项目会教你怎么写单元测试代码。</p>

<h3>二、进阶问题</h3>

<h4>1，访问被测类</h4>

<p>(在Logic Unit Test模式的要求，Application Unit Test不必设置) 比如在App中定义了FundManager.h这个接口，要想在单元测试中访问这个接口：</p>

<pre><code>1，#import ”FundManager.h"    
2，在单元测试的target中，Build Phases选项卡，Compile Sources区域中，增加FundManager.m文件。  
</code></pre>

<p>　　否则会在链接阶段找不到FundManager接口。
　　</p>

<h4>2，向单元测试目标中添加资源</h4>

<p>　　比如要测试的某个接口需要UIImage对象，需要一张图片来初始化UIImage对象，直接调用[UIImage imageNamed:@”xxx”]是不行的，因为这个接口要从App的main bundle中加载图像，不能直接访问添加到单元测试项目中的资源，下面代码演示了两个bundle目录的不同：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Resource Paths are Different!
</span><span class='line'>Many assumptions that your bundle is the main bundle will cause problems when testing. (Especially when adding tests to existing code) Look at the difference in bundles, the main bundle isn’t what you’d expect in a unit test.
</span><span class='line'>NSString *mainBundlePath = [[NSBundle mainBundle] resourcePath];
</span><span class='line'>NSString *directBundlePath = [[NSBundle bundleForClass:[self class]] resourcePath];
</span><span class='line'>NSLog(@”Main Bundle Path: %@”, mainBundlePath);
</span><span class='line'>NSLog(@”Direct Path: %@”, directBundlePath);
</span><span class='line'>NSString *mainBundleResourcePath = [[NSBundle mainBundle] pathForResource:@”Frame.png”ofType:nil];
</span><span class='line'>NSString *directBundleResourcePath = [[NSBundle bundleForClass:[selfclass]] pathForResource:@”Frame.png” ofType:nil];
</span><span class='line'>NSLog(@”Main Bundle Path: %@”, mainBundleResourcePath);
</span><span class='line'>NSLog(@”Direct Path: %@”, directBundleResourcePath);</span></code></pre></td></tr></table></div></figure>


<p>解决方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Load resources using the bundle for the current classNSString *imagePath = [[NSBundle bundleForClass:[self class]] pathForResource:theImageName ofType:nil]; 
</span><span class='line'>UIImage *image = [UIImage imageWithContentsOfFile:imagePath];</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLite使用 iOS平台]]></title>
    <link href="http://saick.net/blog/2013/09/03/sqliteshi-yong-iosping-tai/"/>
    <updated>2013-09-03T13:35:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/03/sqliteshi-yong-iosping-tai</id>
    <content type="html"><![CDATA[<h3>不太常用，但很关键命令</h3>

<h4>1.整理数据库：vacuum</h4>

<p>VACUUM命令是SQLite的一个扩展功能，模仿PostgreSQL中的相同命令而来。若调用VACUUM带一个表名或索引名， 则将整理该表或索引。在SQLite 1.0中，VACUUM命令调用gdbm_reorganize()整理后端数据库文件。</p>

<p>SQLITE 2.0.0中去掉了GDBM后端，VACUUM无效。在2.8.1版中，VACUUM被重新实现。现在索引名或表名被忽略。</p>

<p>当数据库中的一个对象(表，索引或触发器)被撤销，会留下空白的空间。它使数据库比需要的大小更大，但能加快插入速度。实时的插入和删除会使得数据库文件结构混乱，减慢对数据库内容访问的速度。 VACUUM命令复制主数据库文件到临时数据库并从临时数据库重新载入主数据库，以整理数据库文件。这将除去空白页，使表数据彼此相邻排列，并整理数据库文件结构。不能对附加数据库文件进行以上操作。</p>

<p>若当前有活动事务，该命令无法起作用。对于in-memory数据库，该命令无效。</p>

<p>SQLite3.1中，可以通过使用auto-vacuum模式取代VACUUM命令，使用auto_vacuum pragma开启该模式。
扩展阅读：<a href="http://www.sqlite.org/lang_vacuum.html">http://www.sqlite.org/lang_vacuum.html</a></p>

<h4>2.导出数据库：.dump</h4>

<p>.output file.sql</p>

<p>.dump</p>

<p>.output stdout</p>

<h4>3.导入数据库：.read 和.import</h4>

<p>.read file.sql</p>

<p>.import [file][table]</p>

<h3>SQLite不支持的常用操作</h3>

<ul>
<li>1 高级联结：SQlite支持“左外部联结（LEFT OUTER JOIN）”，不支持“右外部联结（RIGHT OUTER JOIN）”和“全外部联结（FULL OUTER JOIN）”。</li>
<li>2 修改表操作：SQlite支持“重命名表（RENAME TABLE）”，使用“ALTER TABLE给表添加新列”。不支持使用“ALTER TABLE”进行“删除列（DROP COLUMN）”，“修改列（ALTER COLUMN）”，“添加约束（ADD CONSTRAINT）”等。</li>
<li>3 触发器支持不完整：SQlite支持“行级触发器（FOR EACH ROW）”，不支持“语句级触发器（FOR EACH STATEMENT）”。</li>
<li>4 视图只能读不能写：SQlite不能在一个视图上使用“删除（DELETE）”，“插入（INSERT）”和“更新（UPDATE）”语句。但是可以创建一个触发器，当对表进行“DELETE”，“INSERT”或者“UPDATE”操作时激活该触发器，在该触发器的body部分做所需的操作。</li>
<li>5 不支持GRANT和REVOKE语句：因为SQlite只是去读写普通的磁盘文件，所以唯一可以应用到SQlite数据库的访问权限（控制），只有底层操作系统的普通的文件访问权限。所以那些client/server模式的数据库上通常具有的GRANT和REVOKE命令，SQlite并不支持，因为它们对于“嵌入式的数据库引擎（embedded database engine）”毫无意义。</li>
</ul>


<h4>官方SQL语法</h4>

<p><a href="http://www.sqlite.org/lang_vacuum.html">http://www.sqlite.org/lang_vacuum.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用CocoaPods进行iOS程序的开源库依懒管理]]></title>
    <link href="http://saick.net/blog/2013/09/03/shi-yong-cocoapodsjin-xing-ioscheng-xu-de-kai-yuan-ku-yi-lan-guan-li/"/>
    <updated>2013-09-03T11:49:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/03/shi-yong-cocoapodsjin-xing-ioscheng-xu-de-kai-yuan-ku-yi-lan-guan-li</id>
    <content type="html"><![CDATA[<h3>前言</h3>

<p>每种语言发展到一个阶段，就会出现相应的依赖管理工具, 或者是中央代码仓库。比如</p>

<ul>
<li>Java: maven，Ivy</li>
<li>Ruby: gems</li>
<li>Python: pip, easy_install</li>
<li>Nodejs: npm</li>
</ul>


<p>随着iOS开发者的增多，业界也出现了为iOS程序提供依赖管理的工具，这个工具叫：CocoaPods。</p>

<h3>CocoaPods简介</h3>

<p>CocoaPods是一个负责管理iOS项目中第三方开源代码的工具。CocoaPods项目的源码在Github上管理。该项目开始于2011年8月12日，经过一年多的发展，现在已经超过1000次提交，并且持续保持活跃更新。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间。</p>

<p>拿我之前开发的粉笔网iPhone客户端为例，其使用了14个第三方开源库。在没有使用CocoaPods以前，我需要：</p>

<p>把这些第三方开源库的相关文件复制到项目中，或者设置成git的submodule，然后这些开源库通常需要依赖系统的一些framework，我需要手工地将这些framework一一增加到项目依赖中，比如ASI网络库就需要增加以下framework: CFNetwork, SystemConfiguration, MobileCoreServices, CoreGraphics and zlib。</p>

<p>对于RegexKitLite这个正则表达式库，我还需要设置-licucore的编译参数
手工管理这些依赖包的更新。</p>

<p>这些体力活虽然简单，但毫无技术含量并且浪费时间。在使用CocoaPods之后，我只需要将用到的第三方开源库放到一个名为Podfile的文件中，然后执行pod install。CocoaPods就会自动将这些第三方开源库的源码下载下来，并且为我的工程设置好相应的系统依赖和编译参数。</p>

<h3>CocoaPods的安装和使用介绍</h3>

<h4>安装</h4>

<p>安装方式异常简单, Mac下都自带ruby，使用ruby的gem命令即可下载安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install cocoapods
</span><span class='line'>$ pod setup</span></code></pre></td></tr></table></div></figure>


<h4>使用</h4>

<p>使用时需要新建一个名为Podfile的文件，以如下格式，将依赖的库名字依次列在文件中即可</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eachability',  '~&gt; 3.0.0'
</span><span class='line'>pod 'ASIHTTPRequest'
</span><span class='line'>pod 'RegexKitLite'</span></code></pre></td></tr></table></div></figure>


<p>然后你将编辑好的Podfile文件放到你的项目根目录中，执行如下命令即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd "your project home"
</span><span class='line'>pod install</span></code></pre></td></tr></table></div></figure>


<p>现在，你的所有第三方库都已经下载完成并且设置好了编译参数和依赖，你只需要记住如下2点即可：</p>

<p>使用CocoaPods生成的 .xcworkspace 文件来打开工程，而不是以前的 .xcodeproj 文件。
每次更改了Podfile文件，你需要重新执行一次pod install命令。</p>

<h4>查找第三方库</h4>

<p>你如果不知道cocoaPods管理的库中，是否有你想要的库，那么你可以通过pod search命令进行查找，以下是我用pod search json查找到的所有可用的库：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pod search json
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> AnyJSON (0.0.1)
</span><span class='line'>   Encode / Decode JSON by any means possible.
</span><span class='line'>   - Homepage: https://github.com/mattt/AnyJSON
</span><span class='line'>   - Source:   https://github.com/mattt/AnyJSON.git
</span><span class='line'>   - Versions: 0.0.1 [master repo]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> JSONKit (1.5pre)
</span><span class='line'>   A Very High Performance Objective-C JSON Library.
</span><span class='line'>   - Homepage: https://github.com/johnezang/JSONKit
</span><span class='line'>   - Source:   git://github.com/johnezang/JSONKit.git
</span><span class='line'>   - Versions: 1.5pre, 1.4 [master repo]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> MTJSONDictionary (0.0.4)
</span><span class='line'>   An NSDictionary category for when you're working with it converting to/from JSON. DEPRECATED, use MTJSONUtils
</span><span class='line'>   instead.
</span><span class='line'>   - Homepage: https://github.com/mysterioustrousers/MTJSONDictionary.git
</span><span class='line'>   - Source:   https://github.com/mysterioustrousers/MTJSONDictionary.git
</span><span class='line'>   - Versions: 0.0.4, 0.0.3, 0.0.2 [master repo]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> MTJSONUtils (0.1.0)
</span><span class='line'>   An NSObject category for working with JSON.
</span><span class='line'>   - Homepage: https://github.com/mysterioustrousers/MTJSONUtils.git
</span><span class='line'>   - Source:   https://github.com/mysterioustrousers/MTJSONUtils.git
</span><span class='line'>   - Versions: 0.1.0, 0.0.1 [master repo]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> SBJson (3.1.1)
</span><span class='line'>   This library implements strict JSON parsing and generation in Objective-C.
</span><span class='line'>   - Homepage: http://stig.github.com/json-framework/
</span><span class='line'>   - Source:   https://github.com/stig/json-framework.git
</span><span class='line'>   - Versions: 3.1.1, 3.1, 3.0.4, 2.2.3 [master repo]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-> TouchJSON (1.0)
</span><span class='line'>   TouchJSON is an Objective-C based parser and generator for JSON encoded data.
</span><span class='line'>   - Homepage: https://github.com/TouchCode/TouchJSON
</span><span class='line'>   - Source:   https://github.com/TouchCode/TouchJSON.git
</span><span class='line'>   - Versions: 1.0 [master repo]</span></code></pre></td></tr></table></div></figure>


<p>生成第三方库的帮助文档</p>

<p>如果你想让CococaPods帮你生成第三方库的帮助文档，并集成到XCode中，那么用brew安装appledoc即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install appledoc</span></code></pre></td></tr></table></div></figure>


<p>关于appledoc，我在今年初的另一篇博客《使用Objective-C的文档生成工具:appledoc》中有专门介绍。它最大的优点是可以将帮助文档集成到XCode中，这样你在敲代码的时候，按住opt键单击类名或方法名，就可以显示出相应的帮助文档。</p>

<h3>原理</h3>

<p>大概研究了一下CocoaPods的原理，它是将所有的依赖库都放到另一个名为Pods项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。发现的一些技术细节有：</p>

<p>Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。
对于资源文件，CocoaPods提供了一个名为Pods-resources.sh的bash脚本，该脚本在每次项目编译的时候都会执行，将第三方库的各种资源文件复制到目标目录中。
CocoaPods通过一个名为Pods.xcconfig的文件来在编译时设置所有的依赖和参数。
Have fun!</p>

<p>转自：
Posted by 唐巧 Dec 2nd, 2012   iOS
自由转载-非商用-非衍生-保持署名 | Creative Commons BY-NC-ND 3.0</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPods的使用]]></title>
    <link href="http://saick.net/blog/2013/09/02/cocoapodsde-shi-yong/"/>
    <updated>2013-09-02T11:00:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/02/cocoapodsde-shi-yong</id>
    <content type="html"><![CDATA[<h5>问题来源：</h5>

<p>在开发iOS的app时，我们时常需要引用第三方Open Source套件来简化开发，一般情况下，我们可以采用Add Files to的方式将其加入到目前的工程中，但也存在一些问题，比如版本演进的控制问题，当前工程引用的第三方库的清单等。</p>

<h4>什么是CocoaPods？</h4>

<p>CocoaPods是一个依赖关系管理工具，用于管理Objective-C工程项目中各种Library。</p>

<h4>安装CocoaPods</h4>

<p>由于CocoaPods是ruby的gem，需要首先安装RubyGems，mac电脑一般都已经安装好了ruby，但可能需要更新一下你的RubyGems（注意system前面是两个横线）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>sudo gem update --system  </span></code></pre></td></tr></table></div></figure>


<p>安装command line工具
确保Xcode中安装了Command Line Tools，打开Xcode->Preferences->Downloads->Components，点一下“Install”按钮
安装CocoaPods</p>

<p>命令行输入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>sudo gem install cocoapods  
</span><span class='line'>pod setup  </span></code></pre></td></tr></table></div></figure>


<p>然后就可以开始使用了。</p>

<p>用pod search Github上的套件名称就可以找到相应的说明，如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>pod search nimbus  </span></code></pre></td></tr></table></div></figure>


<p>会输出</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>-&gt; Nimbus (1.0.0)  
</span><span class='line'>   An iOS framework whose growth is bounded by O(documentation).  
</span><span class='line'>   - Homepage: http://docs.nimbuskit.info/index.html  
</span><span class='line'>   - Source:   https://github.com/jverkoey/nimbus.git  
</span><span class='line'>   - Versions: 1.0.0, 0.9.3, 0.9.2, 0.9.1, 0.9.0 [master repo]  
</span><span class='line'>   - Sub specs:  
</span><span class='line'>         - Nimbus/Core (1.0.0)  
</span><span class='line'>         - Nimbus/Badge (1.0.0)  
</span><span class='line'>         - Nimbus/CSS (1.0.0)  
</span><span class='line'>         - Nimbus/AttributedLabel (1.0.0)  
</span><span class='line'>         - Nimbus/Interapp (1.0.0)  
</span><span class='line'>         - Nimbus/Launcher (1.0.0)  
</span><span class='line'>         - Nimbus/Models (1.0.0)  
</span><span class='line'>         - Nimbus/NetworkControllers (1.0.0)  
</span><span class='line'>         - Nimbus/NetworkImage (1.0.0)  
</span><span class='line'>         - Nimbus/Overview (1.0.0)  
</span><span class='line'>         - Nimbus/PagingScrollView (1.0.0)  
</span><span class='line'>         - Nimbus/Photos (1.0.0)  
</span><span class='line'>         - Nimbus/Operations (1.0.0)  
</span><span class='line'>         - Nimbus/Operations/JSON (1.0.0)  
</span><span class='line'>         - Nimbus/WebController (1.0.0)  </span></code></pre></td></tr></table></div></figure>


<h3>使用CocoaPods管理第三方库</h3>

<p>在工程目录下，新建一个空白的Podfile文档，然后在里面添加内容</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>platform:ios  
</span><span class='line'>pod 'AFNetworking', '1.1.0'  </span></code></pre></td></tr></table></div></figure>


<p>保存时候，开始配置你的工程，终端中输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>pod install  </span></code></pre></td></tr></table></div></figure>


<p>执行完后，CocoaPods在工程目录创建了一个文件夹“Pods”，这个文件夹存放所有依赖的库，另外还创建了一个.workspace文件
注意：配置好之后必须用.workspace文件打开工程，而不是.xcodeproj.
后续：</p>

<p>在使用过程中，有可能会遇到类似下面的问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>Resolving dependencies for target `default' (iOS 4.3)  
</span><span class='line'>[!] AFNetworking (1.1.0) is not compatible with iOS 4.3.</span></code></pre></td></tr></table></div></figure>


<p>解决方法，修改Podfile文档</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[plain] view plaincopy
</span><span class='line'>platform:ios, '5.0'  </span></code></pre></td></tr></table></div></figure>


<p>以上可参考stackoverflow
转自：<a href="http://blog.csdn.net/numbbuaa/article/details/8549018">http://blog.csdn.net/numbbuaa/article/details/8549018</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义UITabbarController引发的血案]]></title>
    <link href="http://saick.net/blog/2013/09/02/zi-ding-yi-uitabbarcontrolleryin-fa-de-xie-an/"/>
    <updated>2013-09-02T09:05:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/02/zi-ding-yi-uitabbarcontrolleryin-fa-de-xie-an</id>
    <content type="html"><![CDATA[<p>转自：<a href="http://www.cnblogs.com/chen1987lei/archive/2012/05/19/2509057.html">http://www.cnblogs.com/chen1987lei/archive/2012/05/19/2509057.html</a></p>

<p>nested push animation can result in corrupted navigation bar 嵌套的navigation动画会造成 navigation bar 错误， 具体表现为上一层的titleview 和这一层重叠， navigationbaritem 维持上一层的左按钮， 右按钮 、、、系统警告提示nested push animation can result in corrupted navigation bar ， 大家遇到过这种情况吗？？
嵌套的动画， 是什么意思呢， 为什么会这样， 要怎么解决</p>

<p>结贴~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<p>有一天，从头到尾分析了整个项目的代码， 最后确认问题根源——自定义UITabbarController引发的血案
项目中使用了自定义的UITabbarController ，修改里面的tabbar视图， 在这个UITabbarController 中实现了viewWillAppear方法， 里面没有加super viewWillAppear ， 结果导致了这一连串的问题，
整个软件里面，都会出现弹一次模态窗口，导航视图就会动画乱序，
导航视图前进后退过快， 导致导航栏嵌套， 一个上面覆盖另一个。</p>

<p>扩展阅读：
<a href="http://stackoverflow.com/questions/5525519/iphone-uinavigation-issue-nested-push-animation-can-result-in-corrupted-naviga">http://stackoverflow.com/questions/5525519/iphone-uinavigation-issue-nested-push-animation-can-result-in-corrupted-naviga</a></p>

<p>其实主要还是在用户看不到的时候，多次使用Animate=YES</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hybird App研究]]></title>
    <link href="http://saick.net/blog/2013/09/02/hybird-appyan-jiu/"/>
    <updated>2013-09-02T09:02:00+08:00</updated>
    <id>http://saick.net/blog/2013/09/02/hybird-appyan-jiu</id>
    <content type="html"><![CDATA[<h4>hybrid App</h4>

<p>“云”时代的来临正在改变App和运营团队之间的关系，一场不能避免的变革正在进行。鉴于移动终端的局限性，移动终端上的APP由本地化应用(Native App)，到混合型应用（Hybrid APP），再到基于WEB的应用Web App，这一连串的变化都源于技术的更新和市场的需要。</p>

<p>Hybrid App是指介于web-app、native-app这两者之间的app,它虽然看上去是一个Native App，但只有一个UI WebView，里面访问的是一个Web App，比如街旁网最开始的应用就是包了个客户端的壳，其实里面是HTML5的网页，后来才推出真正的原生应用。再彻底一点的，如掌上百度和淘宝客户端Android版，走的也是Hybrid App的路线，不过掌上百度里面封装的不是WebView，而是自己的浏览内核，所以体验上更像客户端，更高效。</p>

<p>汽车有混合动力Hybrid，移动应用同样也有混合模式。Hybrid App（混合模式移动应用）兼具“Native App良好用户交互体验的优势”和“Web App跨平台开发的优势”。很多人不知道市场上一些主流移动应用都是基于Hybrid App的方式开发，比如国外有Facebook、国内有百度搜索等。但究竟什么是Hybrid App？如何定义？</p>

<p>Hybrid App：Hybrid App is a mobile application that is coded in both browser-supported language and computer language. They are available through application distribution platforms such as the Apple App Store, Google Play etc. Usually, they are downloaded from the platform to a target device, such as iPhone, Android phone or Windows Phone. The subscribers need to install to run them.</p>

<p>我们来拆解一下里面的含义：</p>

<ul>
<li>1、mobile application：Hybrid App就是一个移动应用</li>
<li>2、both browser-supported language and computer language：同时使用网页语言与程序语言编写</li>
<li>3、available through application distribution platforms：通过应用商店进行分发</li>
<li>4、a target device：区分目标平台</li>
<li>5、install to run：用户需要安装使用</li>
<li><p>综合一下就是：“Hybrid App同时使用网页语言与程序语言开发，通过应用商店区分移动操作系统分发，用户需要安装使用的移动应用”。总体特性更接近Native App但是和Web App区别较大。只是因为同时使用了网页语言编码，所以开发成本和难度比Native App要小很多。因此说，Hybrid App兼具了Native App的所有优势，也兼具了Web App使用HTML5跨平台开发低成本的优势</p></li>
</ul>


<h4>Hybrid App为什么会兴起</h4>

<p>Hybrid App的兴起是现阶段移动互联网产业的一种偶然。移动互联网的热潮刮起后，众多公司前赴后继的进入。但是很快发现移动应用的开发人员太少，所以导致疯狂的人才争夺。市场机制下移动应用开发人才的待遇扶摇直上，最终变成众多企业无法负担养一个具备跨平台开发能力的专业移动应用开发团队。而HTML5的出现让Web App露出曙光，HTML5开发移动应用的跨平台和廉价优势让众多想进入移动互联网领域的公司开始心动。可是当下基于HTML5的Web App更是雾里看花，在用户入口习惯、分发渠道和应用体验这三个核心问题没解决之前，Web App也很难得以爆发。正是在这样是机缘巧合下，基于HTML5低成本跨平台开发优势又兼具Native App特质的Hybrid App技术杀入混战，并且很快吸引了众人的目光。大幅的降低了移动应用的开发成本，可以通过现有应用商店模式发行，在用户桌面形成独立入口等等这些，让Hybrid App成为解决移动应用开发困境不错的选择，也成为现阶段Web App的代言人。Hybrid App像刺客一样，在Native App和Web App混战之时，偶然间的在移动应用开发领域占有了一席之地。</p>

<p>如何实现网页语言与程序语言的混合</p>

<p>Hybrid App通常分为三种类型：多View混合型，单View混合型，Web主体型。</p>

<h5>多View混合型</h5>

<p>即Native View和Web View独立展示，交替出现。目前常见的Hybrid App是Native View与WebView交替的场景出现。这种应用混合逻辑相对简单。即在需要的时候，将WebView当成一个独立的View（Activity）运行起来，在WebView内完成相关的展示操作。这种移动应用主体通常是Native App，Web技术只是起到补充作用。开发难度和Native App基本相当。</p>

<h5>单View混合型</h5>

<p>即在同一个View内，同时包括Native View和Web View。互相之间是覆盖（层叠）的关系。这种Hybrid App的开发成本较高，开发难度较大，但是体验较好。如百度搜索为代表的单View混合型移动应用，既可以实现充分的灵活性，又能实现较好的用户体验。</p>

<h5>Web主体型</h5>

<p>即移动应用的主体是Web View，主要以网页语言编写，穿插Native功能的Hybrid App开发类型。这种类型开发的移动应用体验相对而言存在缺陷，但整体开发难度大幅降低，并且基本可以实现跨平台。Web主体型的移动应用用户体验的好坏，主要取决于底层中间件的交互与跨平台的能力。国外的appMobi、PhoneGap国内的AppCan和Rexsee都属于Web主体型移动应用中间件。其中Rexsee不支持跨平台开发。appMobi和PhoneGap除基础的底层能力更多是通过插件（Plugins）扩展的机制实现Hybrid。而AppCan除了插件机制，还提供了大量的单View混合型的接口来完善和弥补Web主体型Hybrid App体验差的问题，接近Native App的体验。</p>

<p>从分析可见，Hybrid App中的Web主体型只要能够解决用户体验差的问题，就可以变成最佳Hybrid App解决方案类型。</p>

<h4>Hybrid App的瓶颈与未来</h4>

<p>国内外Hybrid App的开发框架众多。如何选择又成为一个难题。下面对开发者比较关心的集中知名跨平台开发移动应用中间件进行列表和对比，以便选择最适合您的移动应用中间件。</p>

<p>Hybrid App的瓶颈与未来</p>

<p>国内外Hybrid App的开发框架众多。如何选择又成为一个难题。下面对开发者比较关心的集中知名跨平台开发移动应用中间件进行列表和对比，以便选择最适合您的移动应用中间件。</p>

<p>PhoneGap是相对比较早进入公众视线的一种选择。但是，开发者简单的基于PhoneGap来开发移动应用肯定会发现结果和Web App比较差的用户体验类似。这也是为什么基于PhoneGap有实用性的移动应用主要集中在iOS上。可是PhoneGap这种现状弱化了HTML5的跨平台价值。</p>

<p>AppCan在技术架构上和PhoneGap类似是Web主体型中间件，但是通过结合了一些原生交互效果能够达到iOS、Android平台都比较一致的用户体验。但是相比PhoneGap的开源，AppCan相对封闭的路线显得过于谨慎。</p>

<p>Titanium是一种基于翻译机制的跨平台中间件，能够开发出具有Native体验的移动应用，但是因为翻译机制的限制导致移动应用开发不能像真正的HTML5开发一样灵活。哪怕一个按钮也不能像普通HTML一样来编写，而必须按照Titanium约定的特定格式。</p>

<p>Salama是全新研发的一套Hybrid APP和云端服务整合的开发套件。在终端，一共有三种开发模式：高度混合模式、JS模式和低度混合模式。在低度混合模式下，需要追求终端速度和显示效果的开发者，可以在不改变原有的构架思路的前提下进行开发。在JS模式下，所有的画面显示及业务逻辑均由JS程序实现，对于原来的基于WEB的开发者，只要熟悉JS、CSS、HTML的前端工程师就可以轻松构建自己的应用。在高度混合模式下，原生和HTML5可以随意组合，可以为开发者在进行大型商业软件开发的过程中提供最高的性价比。不仅如此，在云端Salama还提供了一整套云服务，涵盖了业务处理、数据库操作、文件等资源的存储分发等服务。Salama已经为多家公司提供了方案，知名客户有TOSHIBA-AIRCON、GEDORE等品牌商，同时也在Salama平台上构造了Ishow企业电子目录产品服务。[1-2]</p>

<p>Hybrid App这个领域虽然还处于比较初期的阶段，但是已经有很多优秀的公司和技术团队在致力于跨平台开发移动应用中间件技术的研究，给了开发者众多选择。开发者可以根据实际的项目需求来选择中间件。Web App虽被浏览器厂商和搜索引擎公司所推崇，但存在用户体验差、盈利模式不明确等现阶段无法解决的问题，或最终夭折。Hybrid App正在被越来越多的公司和开发者所认同，势必会成为新世界的王。</p>

<p><a href="http://baike.baidu.com/view/8488720.htm">http://baike.baidu.com/view/8488720.htm</a></p>

<p>Web App和Native App 谁将是未来:
<a href="http://www.cnblogs.com/mofish/archive/2011/07/18/2109565.html">http://www.cnblogs.com/mofish/archive/2011/07/18/2109565.html</a></p>

<p>国内领先的Hybrid App框架 AppCan:   <a href="http://www.appcan.cn/">http://www.appcan.cn/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ iOS 权限管理-Best Practices for Maintaining User Privacy 本地与Push通知检测研究]]></title>
    <link href="http://saick.net/blog/2013/08/22/ios-quan-xian-guan-li-best-practices-for-maintaining-user-privacy/"/>
    <updated>2013-08-22T14:58:00+08:00</updated>
    <id>http://saick.net/blog/2013/08/22/ios-quan-xian-guan-li-best-practices-for-maintaining-user-privacy</id>
    <content type="html"><![CDATA[<p>从Notification的开关入手，发现了统一给出的入口。
从iOS7 beta的文档中获得，但目测还是老的。（关于MircoPhone的控制还没有）</p>

<p>来正文</p>

<h4>Best Practices for Maintaining User Privacy</h4>

<p>Maintaining user privacy should be an important consideration when designing your app. Most iOS devices contain user and device data that users might not want to expose to apps or external entities. If your app uses user or device data in an unexpected way, the user might delete your app rather than trust it to use the data in an appropriate way.</p>

<p>You should access user or device data only with the user’s informed consent obtained in accordance with applicable law. In addition, you should take appropriate steps to protect user and device data and be transparent about how you use it. Here are some best practices that you can take:</p>

<p>Review guidelines from government or industry sources, including the following documents:</p>

<p>The Federal Trade Commission’s report on mobile privacy: Mobile Privacy Disclosures: Building Trust Through Transparency.</p>

<p>The EU Data Protection Commissioners’ Opinion on data protection for Mobile Apps: <a href="http://ec.europa.eu/justice/data-protection/article-29/documentation/opinion-recommendation/files/2013/wp202_en.pdf">http://ec.europa.eu/justice/data-protection/article-29/documentation/opinion-recommendation/files/2013/wp202_en.pdf</a></p>

<p>The California State Attorney General’s recommendations for mobile privacy: Privacy on the Go: Recommendations for the Mobile Ecosystem</p>

<p>These reports provide helpful recommendations for protecting user privacy. You should also review these documents with your company’s legal counsel.
Request access to user or device data that is protected by the iOS system authorization settings at the time the data is needed. Consider supplying a usage description string in your app’s Info.plist file explaining why your app needs that data. Data protected by iOS system authorization settings includes location data, contacts, calendar events, reminders, photos, and media; see Table 1-1. Provide reasonable fallback behavior in situations where the user does not grant access to the requested data.</p>

<p>Be transparent with users about how their data is going to be used. For example, you should specify a URL for your privacy policy or statement with your iTunes Connect metadata when you submit your app, and you might also want to summarize that policy in your app description.
For more information about providing your app’s privacy policy in iTunes Connect, see “Adding New Apps” in iTunes Connect Developer Guide</p>

<p>Give the user control over their user or device data. Provide settings so that the user can disable access to certain types of sensitive information as needed.
Request and use the minimum amount of user or device data needed to accomplish a given task. Do not seek access to or collect data for non obvious reasons, for unnecessary reasons, or because you think it might be useful later.
Take reasonable steps to protect the user and device data that you collect in your apps. When storing such information locally, try to use the iOS data protection feature (described in “Protecting Data Using On-Disk Encryption”) to store it in an encrypted format. And try to use HTTPS when sending user or device data over the network.</p>

<p>If your app uses the ASIdentifierManager class, you must respect the value of its advertisingTrackingEnabled property. And if that property is set to NO by the user, then use the ASIdentifierManager class only for the following purposes: frequency capping, conversion events, estimating the number of unique users, security and fraud detection, and debugging. Remember the ASIdentifierManager class is to be used only for the purposes of serving advertising. Do not use it as a general advertising cookie or for any other purposes.</p>

<p>If you have not already done so, stop using the unique device identifier (UDID) provided by the uniqueIdentifier property of the UIDevice class. That property was deprecated in iOS 5.0, and starting May 1, 2013 the App Store will no longer accept new apps or app updates that use that identifier. Instead, apps should use the identifierForVendor property of the UIDevice class or the advertisingIdentifier property of the ASIdentifierManager class, as appropriate.</p>

<p>Table 1-1 lists the types of data authorizations supported by iOS and how you can determine if your app is authorized to use that data. You should view this table as a starting point for your app’s own privacy behaviors and not as a finite checklist. The contents of this table may evolve over time.</p>

<p>Table 1-1  Data protected by system authorization settings</p>

<p><img src="http://www.saick.net/images/blog/2013-08-22-ios-quan-xian-guan-li-best-practices-for-maintaining-user-privacy.png"></p>

<h4>本地与Push通知检测研究</h4>

<p>enabledRemoteNotificationTypes
Returns the types of notifications the application accepts.</p>

<p><em>&ndash; (UIRemoteNotificationType)enabledRemoteNotificationTypes</em></p>

<p>Return Value
A bit mask whose values indicate the types of notifications the user has requested for the application. See UIRemoteNotificationType for valid bit-mask values.</p>

<p>Discussion
The values in the returned bit mask indicate the types of notifications currently enabled for the application. These types are first set when the application calls the registerForRemoteNotificationTypes: method to register itself with Apple Push Notification Service. Thereafter, the user may modify these accepted notification types in the Notifications preference of the Settings application. This method returns those initial or modified values. iOS does not display or play notification types specified in the notification payload that are not one of the enabled types. For example, the application might accept icon-badging as a form of notification, but might reject sounds and alert messages, even if they are specified in the notification payload.</p>

<p>Availability
Available in iOS 3.0 and later.
See Also
– unregisterForRemoteNotifications
Declared In
UIApplication.h</p>

<p>返回结果强调，用位与判断某个功能是否打开。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSUInteger rntypes = [[UIApplication sharedApplication] enabledRemoteNotificationTypes];
</span><span class='line'>
</span><span class='line'>BOOL isBadge = rntypes & UIRemoteNotificationTypeBadge;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在github上使用octopress]]></title>
    <link href="http://saick.net/blog/2013/08/22/zai-githubshang-shi-yong-octopress/"/>
    <updated>2013-08-22T10:55:00+08:00</updated>
    <id>http://saick.net/blog/2013/08/22/zai-githubshang-shi-yong-octopress</id>
    <content type="html"><![CDATA[<p>Octopress是使用ruby语言编写的一套建立在jekyll之上的博客系统，它有一些很独特的特点：</p>

<ol>
<li>使用静态页面；</li>
<li>不使用数据库；</li>
<li>使用markdown标记语言编写文章；</li>
<li>可以与git紧密集成，方便地进行博客的版本管理；</li>
<li>可以于Github Pages集成，不需要单独的web hosting，只要你有github帐号即可。</li>
</ol>


<p>这些特点中的第三点到第五点尤其吸引我（第一点和第二点也很酷），于是我花了些时间研究。以下是相关的步骤和心得。</p>

<p>在你本地安装octopress</p>

<p>说“安装”可能不太恰当，准确的说是你需要从github上取得octopress的代码并进行些许配置。步骤请参考这里。</p>

<ol>
<li><p>安装RVM(Ruby Version Manager)并使用”Ruby 1.9.2″作为你本地的ruby实现，这事我之前按照这篇文章做过，这里就不详细说了，你也可以按照octopress官方的介绍来安装RVM。</p></li>
<li><p>从github得到octopress代码，运行以下命令：</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
</span><span class='line'>ruby --version  # Should report Ruby 1.9.2
</span><span class='line'>
</span><span class='line'>gem install bundler # Install dependencies
</span><span class='line'>bundle install
</span><span class='line'>
</span><span class='line'>rake install # Install the default Octopress theme</span></code></pre></td></tr></table></div></figure>


<p>配置你本地的octopress，使之可以发布到你的github pages</p>

<p>这样就可以做到：你在本地创建博客文章(当然是用markdown写成的)，然后直接deploy到你的github pages repo，github会自动进行发布。也就是说：所有发博客的动作只需要在你本地用命令完成，酷吧！</p>

<p>参考了这里<a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a>。</p>

<ol>
<li>创建你的github pages repo</li>
</ol>


<p>如果你的github用户名是username，那个就创建一个名称为”username.github.com”的repo，这个repo就是你的github pages repo，更多信息可以参考这里。</p>

<ol>
<li>在你本地运行以下命令，octopress会自动帮你进行配置：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd your_local_octopress_directory
</span><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>注意：当命令提示你输入github URL时，请使用这个格式的URL: “git@github.com:username/username.github.com.git”</p>

<p>当这个命令运行完成之后，你的github pages repo会有两个branches: master branch用于静态页面的发布(“octopress/<em>deploy”的内容)，source branch用于保存你的blog内容（”octopress”目录中除了”</em>deploy”的其它内容）</p>

<p>到这里基本的配置就完成了，你还可以参考这里配置你博客的名称等信息。</p>

<p>编写并发布文章</p>

<ol>
<li>写文章</li>
</ol>


<p>cd your_local_octopress_directory
rake new_post[&ldquo;Your Title of Your Article&rdquo;]
该命令会在你的”octopress/source/_posts”目录下生成对应的”.markdown”文件，用任意文本编辑器编辑，使用markdown语法编写你的文章。</p>

<ol>
<li>生成，预览并发布：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd your_local_octopress_directory
</span><span class='line'>rake generate # generate your blog static pages content according to your input. 
</span><span class='line'>rake preview # start a web server on "http://localhost:4000", you can preview your blog content.
</span><span class='line'>rake deploy # push your static pages content to your github pages repo ("master" branch)</span></code></pre></td></tr></table></div></figure>


<p>还有很重要的一步是把你的修改(文本修改，不包含”_deploy”目录，”deploy”目录保存”rake generate”生成的静态页面内容，会被”rake deploy”命令提交到”master branch”)放到你的github pages(“source” branch)上:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd your_local_octopress_directory
</span><span class='line'>git add .
</span><span class='line'>git commit -m 'your message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>—–EOF—–</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoa 自省机制]]></title>
    <link href="http://saick.net/blog/2013/08/01/cocoa-zi-sheng-ji-zhi/"/>
    <updated>2013-08-01T16:30:00+08:00</updated>
    <id>http://saick.net/blog/2013/08/01/cocoa-zi-sheng-ji-zhi</id>
    <content type="html"><![CDATA[<h3>内省</h3>

<p>内省（Introspection）是面向对象语言和环境的一个强大特性，Objective-C和Cocoa在这个方面尤其的丰富。内省是对象揭示自己作为一个运行时对象的详细信息的一种能力。这些详细信息包括对象在继承树上的位置，对象是否遵循特定的协议，以及是否可以响应特定的消息。NSObject协议和类定义了很多内省方法，用于查询运行时信息，以便根据对象的特征进行识别。</p>

<p>明智地使用内省可以使面向对象的程序更加高效和强壮。它有助于避免错误地进行消息派发、错误地假设对象相等、以及类似的问题。下面的部分将介绍如何在代码中有效地使用NSObject的内省方法。</p>

<p><strong><em>本部分包括如下内容：</em></strong></p>

<ul>
<li>评估继承关系</li>
<li>方法实现和协议遵循</li>
<li>对象的比较</li>
</ul>


<h4>评估继承关系</h4>

<p>一旦您知道一个对象属于什么类，就可能已经相当了解这个对象了。您可以知道它具有什么能力、哪些属性、以及可以响应哪些消息。即使在内省之后不能了解对象所属的类，也可以知道该对象不能响应特定的消息。</p>

<p>NSObject协议声明了几个方法，用于确定对象在类层次中的位置。这些方法在不同粒度上进行操作，比如class和superclass实例方法分别返回代表类和超类的Class对象。使用这些方法需要将一个Class对象和另一个进行对比。列表2-7给出了一个简单（可能是没有价值）的用法实例。</p>

<p>列表2-7  使用类和超类的方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ...
</span><span class='line'>while ( id anObject = [objectEnumerator nextObject] ) {
</span><span class='line'>    if ( [self class] == [anObject superclass] ) {
</span><span class='line'>        // do something appropriate...
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>请注意：有些时候您需要通过class或superclass方法得到正确的类消息接收者。
更加常见的是检查对象类的从属关系，这种情况下您需要向该对象发送isKindOfClass:或isMemberOfClass:消息。前一个方法返回接收者是否为给定类或其继承类的实例，isMemberOfClass:消息则告诉您接收者是否为指定类的实例。isKindOfClass: 方法通常更有用，因为通过它可以知道是否可以向该对象发送一系列消息。考虑列表2-8中的代码片断：</p>

<p>列表2-8  使用isKindOfClass:方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([item isKindOfClass:[NSData class]]) {
</span><span class='line'>    const unsigned char *bytes = [item bytes];
</span><span class='line'>    unsigned int length = [item length];
</span><span class='line'>    // ...
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>确定tem对象是NSData类的继承类的实例之后，代码就知道可以向它发送NSData的bytes和length消息。假定item是NSMutableData类的一个实例，则isKindOfClass:和isMemberOfClass:之间的差别就变得更加明显。如果您调用的是isMemberOfClass:，而不是isKindOfClass:，条件控制块中的代码将永远不会被执行，因为item并不是NSData类的实例，而是其子类NSMutableData的实例。</p>

<h4>方法实现和协议遵循</h4>

<p>NSObject还有两个功能更加强大的内省方法，即respondsToSelector:和conformsToProtocol:。这两个方法分别告诉您一个对象是否实现特定的方法，以及是否遵循指定的正式协议（即该对象是否采纳了该协议，且实现了该协议的所有方法）。</p>

<p>在代码中，您可以在类似的情况下使用这些方法。通过这些方法，您可以在将消息或消息集合发送给某些潜在的匿名对象之前，确定它们是否可以正确地进行响应。在发送消息之前进行检查可以避免由不能识别的选择器引起的运行时例外。在实现非正式协议（这种协议是委托技术的基础）时，Application Kit就是在调用委托方法之前检查委托对象是否实现该方法（通过respondsToSelector:方法）。</p>

<p>列表2-9显示了如何在代码中使用respondsToSelector:方法。</p>

<p>列表2-9  使用respondsToSelector:方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)doCommandBySelector:(SEL)aSelector {
</span><span class='line'>    if ([self respondsToSelector:aSelector]) {
</span><span class='line'>        [self performSelector:aSelector withObject:nil];
</span><span class='line'>    } else {
</span><span class='line'>        [_client doCommandBySelector:aSelector];
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>列表2-10显示如何在代码中使用conformsToProtocol:方法：</p>

<p>列表2-10  使用conformsToProtocol:方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ...
</span><span class='line'>if (!([((id)testObject) conformsToProtocol:@protocol(NSMenuItem)])) {
</span><span class='line'>    NSLog(@"Custom MenuItem, '%@', not loaded; it must conform to the
</span><span class='line'>        'NSMenuItem' protocol.\n", [testObject class]);
</span><span class='line'>    [testObject release];
</span><span class='line'>    testObject = nil;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h4>对象的比较</h4>

<p>hash和isEqual:方法虽然不是严格的内省方法，但是可以发挥类似的作用，是进行对象的识别和比较时不可或缺的运行时工具。它们并不向运行环境查询对象信息，而是依赖于具体类的比较逻辑。</p>

<p>hash和isEqual:方法都在NSObject协议中声明，且彼此关系紧密。实现hash方法必须返回一个整型数，作为哈希表结构中的表地址。两个对象相等（isEqual:方法的判断结果）意味着它们有相同的哈希值。如果您的对象可能被包含在象NSSet这样的集合中，则需要定义hash方法，并确保该方法在两个对象相等的时候返回相同的哈希值。NSObject类中缺省的isEqual:实现只是简单地检查指针是否相等。</p>

<p>isEqual:的使用相当直接，它将消息的接收者和通过参数传入的对象进行比较。对象的比较常常可以在运行时决定应该对对象做些什么。如列表2-11所示，您可以通过isEqual:来确定是否执行某一个动作。在这个例子中，动作是指保存被修改了的预置信息。</p>

<p>列表2-11  使用isEqual:方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)saveDefaults {
</span><span class='line'>    NSDictionary *prefs = [self preferences];
</span><span class='line'>    if (![origValues isEqual:prefs]) 
</span><span class='line'>        [Preferences savePreferencesToDefaults:prefs];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>如果您正在创建子类，则可能需要重载isEqual:方法，以进一步检查对象是否相等。子类可能定义额外的属性，当两个实例被认为相等时，属性的值必须相同。举例来说，假定您创建一个名为MyWidget的NSObject子类，类中包含两个实例变量：name和data。当MyWidget的两个实例被认为是相等时，这些变量必须具有相同的值。列表2-12显示如何在MyWidget类中实现isEqual:方法。</p>

<p>列表 2-12  重载isEqual:方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (BOOL)isEqual:(id)other {
</span><span class='line'>    if (other == self) 
</span><span class='line'>        return YES;
</span><span class='line'>    if (!other || ![other isKindOfClass:[self class]]) 
</span><span class='line'>        return NO;
</span><span class='line'>    return [self isEqualToWidget:other];
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>- (BOOL)isEqualToWidget:(MyWidget *)aWidget {
</span><span class='line'>    if (self == aWidget) 
</span><span class='line'>        return YES;
</span><span class='line'>    if (![(id)[self name] isEqual:[aWidget name]])
</span><span class='line'>        return NO;
</span><span class='line'>    if (![[self data] isEqualToData:[aWidget data]])
</span><span class='line'>        return NO;
</span><span class='line'>    return YES;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>isEqual:方法首先检查指针的等同性，然后是类的等同性，最后调用对象的比较器进行比较。比较器的名称指示出参与比较的对象的类名称。这种类型的比较器对传入的对象进行强制类型检查，是Cocoa中常见的约定，NSString的isEqualToString:和NSTimeZone的isEqualToTimeZone:就是两个这样的例子。特定类的比较器（在这个例子中是isEqualToWidget:）负责执行name和data变量的等同性。</p>

<p>在Cocoa框架的所有isEqualToType:方法中，nil都不是正当的参数，这些方法的实现在接收到nil参数时会抛出例外。然而为了向后兼容，Cocoa框架中的isEqual:方法可以接收nil值，在这种情况下返回NO。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让Apple TV直接收看中国视频]]></title>
    <link href="http://saick.net/blog/2013/06/20/rang-apple-tvzhi-jie-shou-kan-zhong-guo-shi-pin/"/>
    <updated>2013-06-20T14:09:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/20/rang-apple-tvzhi-jie-shou-kan-zhong-guo-shi-pin</id>
    <content type="html"><![CDATA[<h4>工作原理：</h4>

<p>通过程序将视频网站的HTML转换成XML给Apple TV,于是ATV就能收看贵国视频网站了。</p>

<p>本程序给Apple tv访问的网址 : <a href="http://4.appletv3.sinaapp.com/index.php">http://4.appletv3.sinaapp.com/index.php</a>(其他设备浏览器无效)</p>

<p>此方法许多人都设想过，但是TTVast是第一位做出并共享者！由于有了TTVast的工作，我们后来者的工作就轻松许多，感谢TT!为了方便新研究的朋友，特分享我的源码，链接在页面底部。</p>

<p>TT的微博：<a href="http://weibo.com/u/1400101157">http://weibo.com/u/1400101157</a>
<a href="http://www.ottnt.com/">http://www.ottnt.com/</a> Apple TV论坛</p>

<h4>没有自己的DNS</h4>

<p>　　　只需修改Apple TV的DNS（其它网络设置默认），然后地区选择美国，
　　　即可将Apple TV内置网址指向一个新的网站，达到通过Apple TV直接收看贵国视频的愿望。
修改DNS如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>180.153.225.136 电信服务器，适合于南方电信的用户使用。TTVast提供
</span><span class='line'>210.129.145.150 适合部分联通用户，以及海外用户使用。TTVast提供</span></code></pre></td></tr></table></div></figure>


<p>　　用私人DNS会轻易被他伪装的银行、淘宝等网站来欺骗你，为了安全，请ATV用户使用上面靠谱的。
　　请勿用于Apple TV之外的任何设备（如：手机、PC、路由器等），否则后果自负。
　　</p>

<h4>拥有自己的DNS</h4>

<p>将 <a href="http://trailers.apple.com/appletv/">http://trailers.apple.com/appletv/</a> 路径下的 index.xml 及 application.js转向下面网址的对应文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://180.153.225.136:8000/index.xml ttvas提供
</span><span class='line'>http://210.129.145.150:8000/index.xml ttvas提供
</span><span class='line'>http://4.appletv3.sinaapp.com/index.php Missde提供 - 目前测试中..</span></code></pre></td></tr></table></div></figure>


<p>本程序：Apple TV DNS PHP代码下载：
<a href="https://code.google.com/p/appletv/downloads/list">https://code.google.com/p/appletv/downloads/list</a></p>

<p>获取音悦台MV下载地址 <a href="http://huoqu.sinaapp.com/video/">http://huoqu.sinaapp.com/video/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSP中java代码与js之间的传值]]></title>
    <link href="http://saick.net/blog/2013/06/17/jspzhong-javadai-ma-yu-jszhi-jian-de-chuan-zhi/"/>
    <updated>2013-06-17T15:04:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/17/jspzhong-javadai-ma-yu-jszhi-jian-de-chuan-zhi</id>
    <content type="html"><![CDATA[<h5>java   &mdash;&mdash;>   js:</h5>

<p>List的传递：直接赋值就行，如下：</p>

<p>Js代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var userIdList = "&lt;%=archiveNameList%&gt;";  //不加引号是错误的！  </span></code></pre></td></tr></table></div></figure>


<p>为js中var赋java变量值（同样适用于el表达式和struts2标签等）时，切记需要为赋值串加引号&#8221;&ldquo;:
如果java变量为纯数字类型的，可以不加，js可以将其识别为Number类型的；但任何时候都加上不失为一个好的习惯，可以让你不为莫名其妙的错误所困扰。</p>

<p>引用
JSP代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript"&gt;  
</span><span class='line'>    var ploIds = "&lt;%=request.getAttribute("refreshStrParam")%&gt;"; //写成var ploIds = &lt;%=request.getAttribute("refreshStrParam")%&gt; 是错误的！  
</span><span class='line'>    alert(ploIds);  
</span><span class='line'>    &lt;% String s = "abc";%&gt;  
</span><span class='line'>    var s = "&lt;%=s%&gt;"; //写成 var s = &lt;%=s%&gt;;是错误的  
</span><span class='line'>    alert(s);  
</span><span class='line'>    alert("${param.name}"); //写成alert(${param.name})是错误的  
</span><span class='line'>&lt;/script&gt;  </span></code></pre></td></tr></table></div></figure>


<p>数组的传递：不能像List那样直接赋值.可以参考这里
<a href="http://wuaner.iteye.com/blog/455481">http://wuaner.iteye.com/blog/455481</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Div+CSS排版]]></title>
    <link href="http://saick.net/blog/2013/06/08/web-div-plus-csspai-ban/"/>
    <updated>2013-06-08T16:08:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/08/web-div-plus-csspai-ban</id>
    <content type="html"><![CDATA[<h6>显示效果见源网页：<a href="http://www.java3z.com/cwbwebhome/article/article9/ht26.html">http://www.java3z.com/cwbwebhome/article/article9/ht26.html</a></h6>

<p>用DIV把元素定义为块对象，用CSS设置对象的格式和位置。</p>

<p>CSS+DIV的排版方式是目前应用很广的排版方式，它的使用非常灵活，可制作非常复杂的版面。以下是几种常用的CSS+DIV的排版技术。</p>

<p>纵向排列元素</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>用 &lt;div&gt; 标签定义块对象，由于 &lt;div&gt; 标签本身有换行作用，各元素自然排成一列。用CSS的 margin 属性设置对象间的距离，用 padding 属性调整对象的宽度和高度。</span></code></pre></td></tr></table></div></figure>


<p>举例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style type="text/css">
</span><span class='line'>#menu {
</span><span class='line'>   width: 100px; font-size: 15px;
</span><span class='line'>}
</span><span class='line'>.dd {
</span><span class='line'>   border: 1px dotted #0000FF; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; margin-bottom: 3px;
</span><span class='line'>}
</span><span class='line'>&lt;/style>
</span><span class='line'>&lt;div id="menu">
</span><span class='line'>&lt;div class="dd">HTML&lt;/div>
</span><span class='line'>&lt;div class="dd">CSS&lt;/div>
</span><span class='line'>&lt;div class="dd">JavaScript&lt;/div>
</span><span class='line'>&lt;/div></span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>用 &lt;div&gt; 标签定义块对象，用CSS的 float 属性设置对象的浮动。</span></code></pre></td></tr></table></div></figure>


<p>举例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style type="text/css">
</span><span class='line'>#box {
</span><span class='line'>   height: 110px;
</span><span class='line'>}
</span><span class='line'>#b1 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; float: left;
</span><span class='line'>}
</span><span class='line'>#b2 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; float: left; clear: none; margin-left: 5px; margin-right: 5px;
</span><span class='line'>}
</span><span class='line'>#b3 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; float: left; clear: right;
</span><span class='line'>}
</span><span class='line'>&lt;/style>
</span><span class='line'>&lt;div id="box">
</span><span class='line'>&lt;div id="b1">&lt;/div>
</span><span class='line'>&lt;div id="b2">&lt;/div>
</span><span class='line'>&lt;div id="b3">&lt;/div>
</span><span class='line'>&lt;/div></span></code></pre></td></tr></table></div></figure>


<p>用列表排列元素</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>用 &lt;ul&gt; 或 &lt;ol&gt; 标签制作列表，用CSS设置列表项目的效果。这种方法主要用于规则排列的文本块、图片、控件等。</span></code></pre></td></tr></table></div></figure>


<p>举例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style type="text/css">
</span><span class='line'>.list1 {
</span><span class='line'>   height: 20px;
</span><span class='line'>}
</span><span class='line'>.list1 ul {
</span><span class='line'>   list-style-type: none; margin: 0px;
</span><span class='line'>}
</span><span class='line'>.list1 li {
</span><span class='line'>   float: left; margin-right: 5px;
</span><span class='line'>}
</span><span class='line'>&lt;/style>
</span><span class='line'>&lt;div class="list1">
</span><span class='line'>&lt;ul>
</span><span class='line'>&lt;li>[1]&lt;/li>
</span><span class='line'>&lt;li>[2]&lt;/li>
</span><span class='line'>&lt;li>[3]&lt;/li>
</span><span class='line'>&lt;li>[4]&lt;/li>
</span><span class='line'>&lt;/ul>
</span><span class='line'>&lt;/div></span></code></pre></td></tr></table></div></figure>


<p>[1] [2] [3] [4]
用绝对坐标定位元素</p>

<p>浏览器窗口的左上角坐标为 (0,0)，x 坐标向右，y 坐标向下。</p>

<p>CSS提供了几个位置属性，可以设置对象在页面中的位置。</p>

<p>position：当它取值为 absolute 时，表示对象使用绝对坐标定位。</p>

<p>left、top：对象的左上角坐标。</p>

<p>right、bottom：对象的右下角坐标。</p>

<p>z-index：对象的层叠顺序。取值为一个整数。</p>

<p>用绝对坐标定位的对象是可以发生重叠的，如果没有指定层叠顺序，则后定义的对象位于上层，如果指定了“z-index”值，则值大的位于上层。</p>

<p>举例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style type="text/css">
</span><span class='line'>#m1 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; position: absolute; left: 50px; top: 10px; z-index: 1;
</span><span class='line'>}
</span><span class='line'>#m2 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; position: absolute; left: 185px; top: 10px; z-index: 2;
</span><span class='line'>}
</span><span class='line'>#m3 {
</span><span class='line'>   width: 120px; height: 100px; border: 4px double #0000FF; position: absolute; left: 320px; top: 10px; z-index: 3;
</span><span class='line'>}
</span><span class='line'>&lt;/style>
</span><span class='line'>&lt;div id="m1">&lt;/div>
</span><span class='line'>&lt;div id="m2">&lt;/div>
</span><span class='line'>&lt;div id="m3">&lt;/div></span></code></pre></td></tr></table></div></figure>


<p>我们一般不推荐使用这种方法制作网页，这种网页调整起来非常困难，只是在一些特殊情况下使用。</p>

<p>用相对坐标定位元素</p>

<p>父对象的左上角坐标为 (0,0)，对象的坐标是相对于父对象的。</p>

<p>position：当它取值为 relative 时，表示对象使用相对坐标定位。</p>

<p>left、top：对象的左上角坐标。</p>

<p>right、bottom：对象的右下角坐标。</p>

<p>以上坐标也可理解为相对于父对象的左上角偏移的距离。</p>

<p>注意：用相对坐标定位的对象不允许层叠。此时 z-index 属性无效。</p>

<p>用相对坐标定位对象在实现一些不规则的排列或拼接时有很好的效果。</p>

<p>举例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;style type="text/css">
</span><span class='line'>#area {
</span><span class='line'>   width: 270px; height: 70px; border: 1px solid #0000FF;
</span><span class='line'>}
</span><span class='line'>#h1 {
</span><span class='line'>   position: relative; left: 85px; top: 10px;
</span><span class='line'>}
</span><span class='line'>#h2 {
</span><span class='line'>   position: relative; left: 15px; top: 32px;
</span><span class='line'>}
</span><span class='line'>#h3 {
</span><span class='line'>   position: relative; left: 75px; top: 40px;
</span><span class='line'>}
</span><span class='line'>#h4 {
</span><span class='line'>   position: relative; left: 115px; top: 25px;
</span><span class='line'>}
</span><span class='line'>&lt;/style>
</span><span class='line'>&lt;div id="area">
</span><span class='line'>&lt;img id="h1" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h2" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h3" src="./image/face19.gif" />
</span><span class='line'>&lt;img id="h4" src="./image/face19.gif" />
</span><span class='line'>&lt;/div></span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git no branch 解决方案]]></title>
    <link href="http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an/"/>
    <updated>2013-06-07T18:03:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/07/git-no-branch-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>Git在使用过程中，不断的Checkout，以及各种工具使用执行各种平时不太接触的命令，最后发现push不了。 仔细检查才发现原来木有在任何branch上面开发</p>

<h5>事件经过：</h5>

<ol>
<li>正常开发，branch:master</li>
<li>在Eclipse中，使用插件checkout某版本出来</li>
<li>再checkout到最近一次提交的版本</li>
<li>不断Commit多次，一直不能push，以为工具出了问题</li>
<li>实在忍受不了就找问题，最后git branch发现 *(no branch).</li>
</ol>


<p>每次都提交，数据肯定不会丢，也没有担心。
就找个问题的解决方案，果然有。</p>

<p><a href="http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes">http://serverfault.com/questions/56722/git-seemed-to-be-in-no-branch-and-then-lost-my-changes</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># if you have already checked out to master, 
</span><span class='line'># you won't know the commit-ish of your "no branch":
</span><span class='line'>
</span><span class='line'>git fsck --lost-found # (to find your &lt;commit-ish>)
</span><span class='line'>git merge &lt;commit-ish>
</span><span class='line'>
</span><span class='line'># if you are still on your "no branch" commit:
</span><span class='line'>
</span><span class='line'>git log # (the commit-ish will be on the first line)
</span><span class='line'>git checkout master
</span><span class='line'>git merge &lt;commit-ish>
</span><span class='line'>
</span><span class='line'># or
</span><span class='line'>
</span><span class='line'>git log | head -n 1 | cut -d ' ' -f 2 | pbcopy
</span><span class='line'>git checkout master
</span><span class='line'>git merge &lt;commit-ish></span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql for MacOSX 安装和基本操作]]></title>
    <link href="http://saick.net/blog/2013/06/07/mysql-for-macosx-an-zhuang-he-ji-ben-cao-zuo/"/>
    <updated>2013-06-07T10:55:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/07/mysql-for-macosx-an-zhuang-he-ji-ben-cao-zuo</id>
    <content type="html"><![CDATA[<h2>一.安装mysql</h2>

<p>1.mysql下载地址<a href="http://dev.mysql.com/downloads/mysql/">http://dev.mysql.com/downloads/mysql/</a>
我的机器是mac 10.7的;使用mysql-5.1.52-osx10.6-x86.dmg安装包， 没有更新的，这个可用。（5.5也可以这样用，基本一致 MacOSX10.8.x目前都可以用）
2.安装软件包位于硬盘映象(.dmg)文件中，必须首先双击搜索起中的图标来安装该文件。应当安装图像并显示其内容。</p>

<p>注释：在继续安装前，一定要使用MySQL管理器应用程序(在Mac OS X服务器上)或通过命令行的mysqladmin shutdown关闭所有运行MySQL服务器实例。
MySQL的Mac OS X PKG安装到/usr/local/mysql-VERSION，并且还会安装一个符号连接，/usr/local/mysql，指向新的位置。如果有/usr/local/mysql目录，首先将它改名为/usr/local/mysql.bak。安装完后，安装器执行mysql_install_db在MySQL数据库中创建授权表。</p>

<p>安装布局与tar文件二进制分发版类似；所有MySQL二进制代码位于目录/usr/local/mysql/bin中。默认情况，MySQL套接字文件创建为/tmp/mysql.sock。
如果你想在系统启动过程中自动启动MySQL，你还需要安装MySQL Startup Item。在MySQL 5.1中,它是Mac OS X安装盘映像的一部分，是一个独立的安装软件包。只需要双击MySQLStartupItem.图标并按照说明来安装。</p>

<p>MySQL 5.1的Startup Item安装在/Library/StartupItems/MySQLCOM。Startup Item安装时在系统配置文件/etc/hostconfig中加入变量MySQLCOM=-YES-。如果你想要disable自动启动MySQL，只需要将该变量更改为MySQLCOM=-NO-。
安装完后，可以在终端窗口运行下面的命令来启动MySQL。你必须具有管理员权限来执行该任务。</p>

<p>如果你已经安装的Startup Item：</p>

<p>shell> sudo /Library/StartupItems/MySQLCOM/MySQLCOM start</p>

<p>(Enter your password, if necessary)</p>

<p>(Press Control-D or enter &ldquo;exit&rdquo; to exit the shell)</p>

<p>如果不使用Startup Item，输入下面的命令序列：</p>

<p>shell> cd /usr/local/mysql</p>

<p>shell> sudo ./bin/mysqld_safe</p>

<p>(Enter your password, if necessary)</p>

<p>(Press Control-Z)</p>

<p>shell> bg</p>

<p>(Press Control-D or enter &ldquo;exit&rdquo; to exit the shell)</p>

<h2>二.创建用户 分配权限</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grant all privileges on *.* to 'user'@'localhost' with grant option 
</span><span class='line'>grant all privileges on *.* to 'user'@'localhost' identified by ‘123456′; 
</span><span class='line'>flush privileges; </span></code></pre></td></tr></table></div></figure>


<h5>1.新建用户。</h5>

<p><em>如果mysql不识别的话，export PATH=$PATH:/usr/local/mysql/bin</em>
默认密码为空，直接按回车即可。</p>

<p>登录MYSQL</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@&gt;mysql -u root -p </span></code></pre></td></tr></table></div></figure>


<p>@>密码
创建用户
mysql> insert into mysql.user(Host,User,Password) values(&ldquo;localhost&rdquo;,&ldquo;phplamp&rdquo;,password(&ldquo;1234&rdquo;));
刷新系统权限表
mysql>flush privileges;
这样就创建了一个名为：phplamp  密码为：1234  的用户。</p>

<p>然后登录一下。</p>

<p>mysql>exit;
@>mysql -u phplamp -p
@>输入密码
mysql>登录成功</p>

<h5>2.为用户授权。</h5>

<p>登录MYSQL（有ROOT权限）。我里我以ROOT身份登录.
@>mysql -u root -p
@>密码
首先为用户创建一个数据库(phplampDB)
mysql>create database phplampDB;
授权phplamp用户拥有phplamp数据库的所有权限。 如果其它机器想访问的话，就把localhost改为&#8221;%&#8221;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;grant all privileges on phplampDB.* to phplamp@localhost identified by '1234'; </span></code></pre></td></tr></table></div></figure>


<p>刷新系统权限表
mysql>flush privileges;
mysql>其它操作</p>

<p>如果想指定部分权限给一用户，可以这样来写:
mysql>grant select,update on phplampDB.* to phplamp@localhost identified by &lsquo;1234&rsquo;;
//刷新系统权限表。
mysql>flush privileges;</p>

<h5>3.删除用户。</h5>

<p>@>mysql -u root -p
@>密码
mysql>DELETE FROM user WHERE User=&ldquo;phplamp&rdquo; and Host=&ldquo;localhost&rdquo;;
mysql>flush privileges;
//删除用户的数据库
mysql>drop database phplampDB;</p>

<h5>4.修改指定用户密码。</h5>

<p>@>mysql -u root -p
@>密码
mysql>update mysql.user set password=password(&lsquo;新密码&rsquo;) where User=&ldquo;phplamp&rdquo; and Host=&ldquo;localhost&rdquo;;
mysql>flush privileges;</p>

<h2>三、使用后修改编码</h2>

<p>修改my.ini文件
加上
default-character-set=gb2312
设定数据库字符集
alter database da_name default character set &lsquo;charset&rsquo;</p>

<h5>1)设置数据库编码 /etc/my.cnf</h5>

<p>[mysqld]
default-character-set=gbk
&hellip;
[client]
default-character-set=gbk
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</p>

<h5>2)按字符集导出</h5>

<p>$mysqldump -u root -p dbname &mdash;default-character-set=gbk > a.sql;</p>

<h5>3)查看SQL文件的编码</h5>

<p>[root@localhost gethtml]# file a.sql
   a.sql: UTF-8 Unicode &hellip;
[root@localhost gethtml]# iconv -f utf-8 -t gbk a.sql > a2.sql
[root@localhost gethtml]# file a2.sql
   a2.sql: Non-ISO extended-ASCII English text 这时已经是gbk的编码了</p>

<h5>3)导入</h5>

<p>查看数据库服务和客户端字符集
mysql> status;
Server characterset:    gbk
Db     characterset:      gbk
Client characterset:      latin1
Conn. characterset:     latin1</p>

<p>mysql> set names &lsquo;gbk&rsquo;;   //这样
mysql> status;
Server characterset:   gbk
Db     characterset:     gbk
Client characterset:     gbk
Conn. characterset:    gbk
这时才能导数据</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; source a.sql;
</span><span class='line'>----------------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<p>单独设置某个数据库：
alter database testdb character set utf8;
查看mysql支持的编码：
show character set;</p>

<p>查看系统的字符集和排序方式的设定可以通过下面的两条命令：
mysql> SHOW VARIABLES LIKE &lsquo;&#8217;character_set_%&rsquo;&lsquo;;
LINUX 如下:</p>

<h5>1)导出数据</h5>

<p>[<a href="&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#114;&#111;&#111;&#x74;&#64;&#x77;&#119;&#x77;&#x2e;&#x63;&#110;&#x73;&#99;&#x6e;&#46;&#x6f;&#114;&#x67;">&#x72;&#111;&#x6f;&#116;&#64;&#x77;&#119;&#x77;&#x2e;&#x63;&#110;&#115;&#x63;&#110;&#46;&#x6f;&#x72;&#103;</a> ~]$ mysqldump -u root -p dbname &mdash;default-character-set=gbk > base_user.sql;</p>

<h5>2)查看导出的sql文件的编码</h5>

<p>[<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#x72;&#x6f;&#x6f;&#116;&#x40;&#119;&#x77;&#x77;&#x2e;&#99;&#x6e;&#115;&#99;&#110;&#x2e;&#111;&#114;&#103;">&#x72;&#111;&#111;&#116;&#64;&#x77;&#119;&#x77;&#46;&#x63;&#110;&#115;&#x63;&#x6e;&#x2e;&#111;&#114;&#103;</a> ~]$ file base_user.sql
　 base_user.sql: UTF-8 Unicode text, with very long lines</p>

<h5>3)转成要用的编码</h5>

<p>[<a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#114;&#111;&#111;&#116;&#64;&#119;&#x77;&#x77;&#46;&#x63;&#x6e;&#x73;&#x63;&#110;&#46;&#111;&#x72;&#103;">&#x72;&#111;&#111;&#116;&#64;&#119;&#119;&#119;&#46;&#99;&#x6e;&#115;&#x63;&#x6e;&#x2e;&#x6f;&#x72;&#x67;</a> ~]$ iconv -f utf-8 -t gbk base_user.sql >base_user_gbk.sql</p>

<h5>4)连接数据库并查看当前库的编码</h5>

<p>[<a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#114;&#111;&#x6f;&#116;&#x40;&#x77;&#119;&#x77;&#x2e;&#99;&#110;&#115;&#99;&#110;&#46;&#x6f;&#x72;&#103;">&#114;&#x6f;&#x6f;&#x74;&#64;&#x77;&#119;&#x77;&#x2e;&#x63;&#110;&#x73;&#99;&#x6e;&#x2e;&#x6f;&#x72;&#103;</a> ~]$ mysql -uroot
　mysql> use testdb;
mysql> status;</p>

<pre><code>Server characterset:    latin1
Db     characterset:    gbk
Client characterset:    latin1
Conn. characterset:    latin1
</code></pre>

<h5>5)设置成需要的编码</h5>

<p>mysql>set names &lsquo;gbk&rsquo;;</p>

<h5>6)查看现在的编码</h5>

<p>mysql> status;</p>

<pre><code>Server characterset:    latin1
Db     characterset:    gbk
Client characterset:    gbk
Conn. characterset:    gbk
</code></pre>

<h5>7)导入我们转换成gbk后的文件</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; source base_user_gbk.sql;</span></code></pre></td></tr></table></div></figure>


<h2>四、导入、导出sql文件</h2>

<p>步骤如下：</p>

<p>一.MYSQL的命令行模式的设置：
桌面->我的电脑->属性->环境变量->新建-></p>

<p>PATH=“；path\mysql\bin;”其中path为MYSQL的安装路径。</p>

<p>二.简单的介绍一下命令行进入MYSQL的方法：</p>

<h5>1.C:>mysql -h hostname -u username -p</h5>

<p>按ENTER键，等待然后输入密码。这里hostname为服务器的名称，如localhost，username为MYSQL的用户名，如root。
进入命令行后可以直接操作MYSQL了。</p>

<h5>2.简单介绍一下MYSQL命令：</h5>

<p>mysql->CREATE DATABASE dbname;//创建数据库
mysql->CREATE TABLE tablename;//创建表
mysql->SHOW DATABASES;//显示数据库信息，有那些可用的数据库。
mysql->USE dbname;//选择数据库
mysql->SHOW TABLES;//显示表信息，有那些可用的表
mysql->DESCRIBE tablename;//显示创建的表的信息</p>

<h5>三.从数据库导出数据库文件：</h5>

<p>1.将数据库mydb导出到e:\mysql\mydb.sql文件中：</p>

<p>打开开始->运行->输入cmd 进入命令行模式
c:>mysqldump -h localhost -u root -p mydb >e:\mysql\mydb.sql</p>

<p>然后输入密码，等待一会导出就成功了，可以到目标文件中检查是否成功。</p>

<p>2.将数据库mydb中的mytable导出到e:\mysql\mytable.sql文件中：
c:>mysqldump -h localhost -u root -p mydb mytable>e:\mysql\mytable.sql</p>

<p>3.将数据库mydb的结构导出到e:\mysql\mydb_stru.sql文件中：
c:>mysqldump -h localhost -u root -p mydb &mdash;add-drop-table >e:\mysql\mydb_stru.sql</p>

<p>//-h localhost可以省略，其一般在虚拟主机上用</p>

<h5>四.从外部文件导入数据到数据库中：</h5>

<p>从e:\mysql\mydb2.sql中将文件中的SQL语句导入数据库中：</p>

<p>1.从命令行进入mysql，然后用命令CREATE DATABASE mydb2;创建数据库mydb2。</p>

<p>2.退出mysql 可以输入命令exit；或者quit；</p>

<p>3.在CMD中输入下列命令：
c:>mysql -h localhost -u root -p mydb2 &lt; e:\mysql\mydb2.sql</p>

<p>然后输入密码，就OK了。</p>

<h5>五.下面谈一下关于导入文件大小限制问题的解决：</h5>

<p>默认情况下：mysql 对导入文件大小有限制的，最大为2M，所以当文件很大时候，直接无法导入，下面就这个问题的解决列举如下：</p>

<p>1.在php.ini中修改相关参数：</p>

<p>影响mysql导入文件大小的参数有三个：</p>

<p>memory_limit=128M,upload_max_filesize=2M,post_max_size=8M</p>

<p>修改upload_max_filesize=200 M 这里修改满足你需要的大小，可以同时修改其他两项memory_limit=250M post_max_size=200M</p>

<p>这样就可以导入200M以下的.sql文件了。</p>

<p>上文中是把mysql放置在系统路径中，其实不妨也行。例如我的Mysql安装目录为D:\MySQL Server 5.0；</p>

<p>则首先用cmd打开dos窗口，然后输入D:(没有&#8217;\&lsquo;)回车</p>

<p>此时应该会出现D:>这样的标记，然后在其后面输入D:\MySQL Server 5.0\bin回车（顺序颠倒也行的）</p>

<p>出现D:\MySQL Server 5.0\bin> 接着输入mysqldump -u用户名 -p 数据库名 > 数据库名.sql（也可以输入路径）；具体用法参照上文。</p>

<p>导入文件同样，只是改了‘>’为‘&lt;’就行了。或者直接用source 也行：</p>

<p>常用source 命令</p>

<p>进入mysql数据库控制台</p>

<p>如mysql -u root -p（没必要,省略）</p>

<p>mysql>use 数据库</p>

<p>然后使用source命令，后面参数为脚本文件(如这里用到的.sql)</p>

<p>mysql>source d:wcnc_db.sql</p>

<h2>修改Root密码</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES/NO)</span></code></pre></td></tr></table></div></figure>


<p>安装时没有给root设置密码而默认其为空的,或忘记密码，不能成功登录，或者登录后没有权限操作。
可以尝试以下的方法：
方法1  :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mysqladmin -u root password 123456</span></code></pre></td></tr></table></div></figure>


<p>设置了root的密码。</p>

<p>方法2</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/init.d/mysql stop
</span><span class='line'># mysqld_safe --user=mysql --skip-grant-tables --skip-networking &
</span><span class='line'># mysql -u root mysql
</span><span class='line'>
</span><span class='line'>mysql> UPDATE user SET Password=PASSWORD('123456') where USER='root';
</span><span class='line'>mysql> FLUSH PRIVILEGES;
</span><span class='line'>mysql> quit
</span><span class='line'># /etc/init.d/mysql restart
</span><span class='line'># mysql -uroot -p
</span><span class='line'>Enter password: &lt;输入新设的密码newpassword>
</span><span class='line'>mysql>　</span></code></pre></td></tr></table></div></figure>


<p>方法3：
MySQL安装之后，root的密码是空的。为了提高安全性有必要给root加上密码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql –u root –p
</span><span class='line'>password:
</span><span class='line'>mysql&gt;SET PASSWORD FOR 'root'@'localhost' = PASSWORD('Password');</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaWeb开发 eclipse myEclipse JSP编辑卡死问题解决]]></title>
    <link href="http://saick.net/blog/2013/06/03/javawebkai-fa-eclipse-myeclipse-jspbian-ji-qia-si-wen-ti-jie-jue/"/>
    <updated>2013-06-03T15:16:00+08:00</updated>
    <id>http://saick.net/blog/2013/06/03/javawebkai-fa-eclipse-myeclipse-jspbian-ji-qia-si-wen-ti-jie-jue</id>
    <content type="html"><![CDATA[<p>这几天用lomboz3.3编辑JSP文件时，输入&lt;%@总是卡死，这是因为lomboz在我们输入&lt;%@时，lomboz在后台跟www.w3.org网站自动连接（IP：128.30.52.166：80），我是用WPE监听发现的。</p>

<p>解决办法：</p>

<h6>Windows:</h6>

<p>打开C:\WINDOWS\system32\drivers\etc\下的hosts文件，</p>

<h5>Linux等:</h5>

<p>/etc/hosts</p>

<p>在其中加入 127.0.0.1   www.w3.org
OK,解决了。</p>
]]></content>
  </entry>
  
</feed>
